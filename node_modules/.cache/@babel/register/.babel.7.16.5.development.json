{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2\",\"filename\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/generatePdf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2",
      "filename": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/generatePdf.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/generatePdf.js",
        "plugins": [
          "classStaticBlock",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/generatePdf.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
        "sourceFileName": "generatePdf.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _labelmake = _interopRequireDefault(require(\"labelmake\"));\n\nvar _labelmakeTemplate = _interopRequireDefault(require(\"./labelmake-template.json\"));\n\nvar _generateChart = require(\"./generateChart\");\n\nvar _DB = require(\"./DB\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// template 새로 load하면 \"fontName\":\"NanumGothic\" 직접 추가해야함. 자동화 방법은~?\nvar NanumGothic = _fs[\"default\"].readFileSync(\"./NanumGothic-Regular.ttf\");\n\nvar font = {\n  NanumGothic: {\n    data: NanumGothic,\n    subset: false\n  }\n}; // rabbitMQ를 가정한 곳에서 text를 가져온 것도 여기서 그냥 바로 받아버렸다. 더 나은 방법은?\n\n(0, _generateChart.generateChart)().then(function (charts) {\n  var inputs = [{\n    // 1. cover: 고유검체번호 / 회사이름 / 연도자동\n    // 2. 목차: 페이지자동\n    // 3. overall page\n    // getData로 가져오는 key값은 rabbitMQ에서의 key. 따라서 내가 설정한 변수명과 일치 하지 않겠지. 이 상황 구현하기.\n    \"general-reportDesc\": (0, _DB.getData)(\"mainpage-description\"),\n    \"general-corpInfo-num\": (0, _DB.getData)(\"mainpage-company\")[\"distinct-number\"],\n    \"general-corpInfo-name\": (0, _DB.getData)(\"mainpage-company\")[\"company-name\"],\n    \"general-corpInfo-cat\": (0, _DB.getData)(\"mainpage-company\")[\"company-catagory\"],\n    \"general-corpInfo-sorts\": (0, _DB.getData)(\"mainpage-company\")[\"sort-of-check\"],\n    \"general-corpInfo-reqDate\": (0, _DB.getData)(\"mainpage-company\")[\"request-date\"],\n    \"general-corpInfo-resDate\": (0, _DB.getData)(\"mainpage-company\")[\"response-date\"],\n    \"general-mentalIllness-measure\": (0, _DB.getData)(\"mainpage-solution\"),\n    \"general-mentalIllness-overall-desc\": (0, _DB.getData)(\"mainpage-result1\"),\n    \"general-mentalIllness-each-desc\": (0, _DB.getData)(\"mainpage-result2\"),\n    \"general-occuStress-reportDesc\": (0, _DB.getData)(\"mainpage-result3\"),\n    \"general-occuStress-measure\": (0, _DB.getData)(\"mainpage-result4\"),\n    \"general-occuStress-desc-male\": (0, _DB.getData)(\"mainpage-result5\"),\n    \"general-occuStress-desc-female\": (0, _DB.getData)(\"mainpage-result6\"),\n    \"largeScaleCatOverall-reportDesc\": (0, _DB.getData)(\"level1page-result1\"),\n    \"largeScaleCatOverall-measure\": (0, _DB.getData)(\"level1page-result2\"),\n    \"general-mentalIllness-overall\": charts['general-mentalIllness-overall'],\n    \"general-mentalIllness-mean5yrs\": charts[\"general-mentalIllness-mean5yrs\"],\n    \"general-mentalIllness-each-phq9\": charts[\"general-mentalIllness-each-PHQ9\"],\n    // \"general-mentalIllness-each-gad7\": charts[\"general-mentalIllness-each-GAD7\"],\n    // \"general-mentalIllness-each-adnm4\": charts[\"general-mentalIllness-each-ADNM4\"],\n    // \"general-mentalIllness-each-pcptsd5\": charts[\"general-mentalIllness-each-PCPTSD5\"],\n    // \"general-mentalIllness-each-kosssf\": charts[\"general-mentalIllness-each-KOSSSF\"],\n    // \"general-mentalIllness-each-p4\": charts[\"general-mentalIllness-each-P4\"],\n    \"general-occuStress-overall-male\": charts[\"general-occuStress-overall-male\"],\n    \"general-occuStress-overall-female\": charts[\"general-occuStress-overall-female\"],\n    // 직무스트레스 요인별 결과 추가해야(+template도 아직 추가하지 않음)\n    \"general-occuStress-mean5yrs-male\": charts[\"general-occuStress-mean5yrs-male\"],\n    \"general-occuStress-mean5yrs-female\": charts[\"general-occuStress-mean5yrs-female\"] // \"largeScaleCatOverall-riskPriority-level-1\"\n    // \"largeScaleCatOverall-riskPriority-point-1\"\n    // \"largeScaleCatOverall-riskPriority-mean5yrs-1\"\n    // 증상별 위험 소분류: NOT YET\n    // 대분류 세부\n    //\"largeScaleCatDetail-\"\n    // 중분류 전체\n    // 중분류 세부\n    // 소분류 전체\n    // 소분류 세부\n\n  }];\n  (0, _labelmake[\"default\"])({\n    inputs: inputs,\n    template: _labelmakeTemplate[\"default\"],\n    font: font\n  }).then(function (pdf) {\n    _fs[\"default\"].writeFileSync(__dirname + \"/index19.pdf\", pdf, \"utf-8\"); // 파일이름 등 자동으로 변경하는 방법은?\n\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "generatePdf.js"
      ],
      "names": [
        "NanumGothic",
        "fs",
        "readFileSync",
        "font",
        "data",
        "subset",
        "then",
        "charts",
        "inputs",
        "template",
        "pdf",
        "writeFileSync",
        "__dirname"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAFiD;AAIjD,IAAMA,WAAW,GAAGC,eAAGC,YAAH,CAAgB,2BAAhB,CAApB;;AACA,IAAMC,IAAI,GAAG;AACTH,EAAAA,WAAW,EAAG;AACVI,IAAAA,IAAI,EAAEJ,WADI;AAEVK,IAAAA,MAAM,EAAE;AAFE;AADL,CAAb,C,CAOA;;AACA,oCACKC,IADL,CACU,UAAEC,MAAF,EAAc;AAChB,MAAMC,MAAM,GAAG,CACX;AACZ;AACA;AACA;AACI;AACY,0BAAsB,iBAAQ,sBAAR,CAL1B;AAMI,4BAAwB,iBAAQ,kBAAR,EAA4B,iBAA5B,CAN5B;AAOI,6BAAyB,iBAAQ,kBAAR,EAA4B,cAA5B,CAP7B;AAQI,4BAAwB,iBAAQ,kBAAR,EAA4B,kBAA5B,CAR5B;AASI,8BAA0B,iBAAQ,kBAAR,EAA4B,eAA5B,CAT9B;AAUI,gCAA4B,iBAAQ,kBAAR,EAA4B,cAA5B,CAVhC;AAWI,gCAA4B,iBAAQ,kBAAR,EAA4B,eAA5B,CAXhC;AAYI,qCAAiC,iBAAQ,mBAAR,CAZrC;AAaI,0CAAsC,iBAAQ,kBAAR,CAb1C;AAcI,uCAAmC,iBAAQ,kBAAR,CAdvC;AAeI,qCAAiC,iBAAQ,kBAAR,CAfrC;AAgBI,kCAA8B,iBAAQ,kBAAR,CAhBlC;AAiBI,oCAAgC,iBAAQ,kBAAR,CAjBpC;AAkBI,sCAAkC,iBAAQ,kBAAR,CAlBtC;AAmBI,uCAAmC,iBAAQ,oBAAR,CAnBvC;AAoBI,oCAAgC,iBAAQ,oBAAR,CApBpC;AAqBI,qCAAiCD,MAAM,CAAC,+BAAD,CArB3C;AAsBI,sCAAkCA,MAAM,CAAC,gCAAD,CAtB5C;AAuBI,uCAAmCA,MAAM,CAAC,iCAAD,CAvB7C;AAwBI;AACA;AACA;AACA;AACA;AAEA,uCAAmCA,MAAM,CAAC,iCAAD,CA9B7C;AA+BI,yCAAqCA,MAAM,CAAC,mCAAD,CA/B/C;AAgCI;AACA,wCAAoCA,MAAM,CAAC,kCAAD,CAjC9C;AAkCI,0CAAsCA,MAAM,CAAC,oCAAD,CAlChD,CAoCI;AACA;AACA;AAGA;AAEA;AACI;AAEJ;AACA;AACA;AACA;;AAjDJ,GADW,CAAf;AAsDA,6BAAU;AAAEC,IAAAA,MAAM,EAANA,MAAF;AAAUC,IAAAA,QAAQ,EAARA,6BAAV;AAAoBN,IAAAA,IAAI,EAAJA;AAApB,GAAV,EACKG,IADL,CACU,UAACI,GAAD,EAAS;AACXT,mBAAGU,aAAH,CAAiBC,SAAS,GAAG,cAA7B,EAA6CF,GAA7C,EAAkD,OAAlD,EADW,CACiD;;AAC/D,GAHL;AAIH,CA5DL",
      "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
      "sourcesContent": [
        "import fs from \"fs\";\nimport labelmake from \"labelmake\";\nimport template from \"./labelmake-template.json\" // template 새로 load하면 \"fontName\":\"NanumGothic\" 직접 추가해야함. 자동화 방법은~?\nimport { generateChart } from \"./generateChart\"\nimport { getData } from \"./DB\"\n\nconst NanumGothic = fs.readFileSync(\"./NanumGothic-Regular.ttf\")\nconst font = {\n    NanumGothic : {\n        data: NanumGothic,\n        subset: false\n    }\n};\n\n// rabbitMQ를 가정한 곳에서 text를 가져온 것도 여기서 그냥 바로 받아버렸다. 더 나은 방법은?\ngenerateChart()\n    .then(( charts ) => {\n        const inputs = [\n            {\n// 1. cover: 고유검체번호 / 회사이름 / 연도자동\n// 2. 목차: 페이지자동\n// 3. overall page\n    // getData로 가져오는 key값은 rabbitMQ에서의 key. 따라서 내가 설정한 변수명과 일치 하지 않겠지. 이 상황 구현하기.\n                \"general-reportDesc\": getData(\"mainpage-description\"),\n                \"general-corpInfo-num\": getData(\"mainpage-company\")[\"distinct-number\"],\n                \"general-corpInfo-name\": getData(\"mainpage-company\")[\"company-name\"],\n                \"general-corpInfo-cat\": getData(\"mainpage-company\")[\"company-catagory\"],\n                \"general-corpInfo-sorts\": getData(\"mainpage-company\")[\"sort-of-check\"],\n                \"general-corpInfo-reqDate\": getData(\"mainpage-company\")[\"request-date\"],\n                \"general-corpInfo-resDate\": getData(\"mainpage-company\")[\"response-date\"],\n                \"general-mentalIllness-measure\": getData(\"mainpage-solution\"),\n                \"general-mentalIllness-overall-desc\": getData(\"mainpage-result1\"),\n                \"general-mentalIllness-each-desc\": getData(\"mainpage-result2\"),\n                \"general-occuStress-reportDesc\": getData(\"mainpage-result3\"),\n                \"general-occuStress-measure\": getData(\"mainpage-result4\"),\n                \"general-occuStress-desc-male\": getData(\"mainpage-result5\"),\n                \"general-occuStress-desc-female\": getData(\"mainpage-result6\"),\n                \"largeScaleCatOverall-reportDesc\": getData(\"level1page-result1\"),\n                \"largeScaleCatOverall-measure\": getData(\"level1page-result2\"),\n                \"general-mentalIllness-overall\": charts['general-mentalIllness-overall'],\n                \"general-mentalIllness-mean5yrs\": charts[\"general-mentalIllness-mean5yrs\"],\n                \"general-mentalIllness-each-phq9\": charts[\"general-mentalIllness-each-PHQ9\"],\n                // \"general-mentalIllness-each-gad7\": charts[\"general-mentalIllness-each-GAD7\"],\n                // \"general-mentalIllness-each-adnm4\": charts[\"general-mentalIllness-each-ADNM4\"],\n                // \"general-mentalIllness-each-pcptsd5\": charts[\"general-mentalIllness-each-PCPTSD5\"],\n                // \"general-mentalIllness-each-kosssf\": charts[\"general-mentalIllness-each-KOSSSF\"],\n                // \"general-mentalIllness-each-p4\": charts[\"general-mentalIllness-each-P4\"],\n\n                \"general-occuStress-overall-male\": charts[\"general-occuStress-overall-male\"],\n                \"general-occuStress-overall-female\": charts[\"general-occuStress-overall-female\"],\n                // 직무스트레스 요인별 결과 추가해야(+template도 아직 추가하지 않음)\n                \"general-occuStress-mean5yrs-male\": charts[\"general-occuStress-mean5yrs-male\"],\n                \"general-occuStress-mean5yrs-female\": charts[\"general-occuStress-mean5yrs-female\"],\n\n                // \"largeScaleCatOverall-riskPriority-level-1\"\n                // \"largeScaleCatOverall-riskPriority-point-1\"\n                // \"largeScaleCatOverall-riskPriority-mean5yrs-1\"\n\n\n                // 증상별 위험 소분류: NOT YET\n\n                // 대분류 세부\n                    //\"largeScaleCatDetail-\"\n\n                // 중분류 전체\n                // 중분류 세부\n                // 소분류 전체\n                // 소분류 세부\n\n            }\n        ];\n        labelmake({ inputs, template, font })\n            .then((pdf) => {\n                fs.writeFileSync(__dirname + \"/index19.pdf\", pdf, \"utf-8\"); // 파일이름 등 자동으로 변경하는 방법은?\n            });\n    })\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1641261366941
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2\",\"filename\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/template.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2",
      "filename": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/template.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/template.js",
        "plugins": [
          "classStaticBlock",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/template.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
        "sourceFileName": "template.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _labelmakeTemplate = _interopRequireDefault(require(\"./labelmake-template.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar getTemplate = function getTemplate() {\n  return _labelmakeTemplate[\"default\"];\n};\n\nif (typeof window !== \"undefined\") {\n  window.template = getTemplate();\n} else {\n  module.exports = getTemplate();\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlbXBsYXRlLmpzIl0sIm5hbWVzIjpbImdldFRlbXBsYXRlIiwidGVtcGxhdGUiLCJ3aW5kb3ciLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBRUEsSUFBTUEsV0FBVyxHQUFHLFNBQWRBLFdBQWM7QUFBQSxTQUNoQkMsNkJBRGdCO0FBQUEsQ0FBcEI7O0FBSUEsSUFBSSxPQUFPQyxNQUFQLEtBQWtCLFdBQXRCLEVBQW1DO0FBQy9CQSxFQUFBQSxNQUFNLENBQUNELFFBQVAsR0FBa0JELFdBQVcsRUFBN0I7QUFDSCxDQUZELE1BRU87QUFDSEcsRUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSixXQUFXLEVBQTVCO0FBQ0giLCJzb3VyY2VSb290IjoiL1VzZXJzL2VnMmRhdGEvSWRlYVByb2plY3RzL2NoYXJ0X3BkZl9sYWJlbG1ha2VfMi8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdGVtcGxhdGUgZnJvbSBcIi4vbGFiZWxtYWtlLXRlbXBsYXRlLmpzb25cIlxuXG5jb25zdCBnZXRUZW1wbGF0ZSA9ICgpID0+IChcbiAgICB0ZW1wbGF0ZVxuKTtcblxuaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB3aW5kb3cudGVtcGxhdGUgPSBnZXRUZW1wbGF0ZSgpO1xufSBlbHNlIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IGdldFRlbXBsYXRlKCk7XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "template.js"
      ],
      "names": [
        "getTemplate",
        "template",
        "window",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc;AAAA,SAChBC,6BADgB;AAAA,CAApB;;AAIA,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAC/BA,EAAAA,MAAM,CAACD,QAAP,GAAkBD,WAAW,EAA7B;AACH,CAFD,MAEO;AACHG,EAAAA,MAAM,CAACC,OAAP,GAAiBJ,WAAW,EAA5B;AACH",
      "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
      "sourcesContent": [
        "import template from \"./labelmake-template.json\"\n\nconst getTemplate = () => (\n    template\n);\n\nif (typeof window !== \"undefined\") {\n    window.template = getTemplate();\n} else {\n    module.exports = getTemplate();\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1639468452148
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2\",\"filename\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/generateChart.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2",
      "filename": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/generateChart.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/generateChart.js",
        "plugins": [
          "classStaticBlock",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/generateChart.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
        "sourceFileName": "generateChart.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateChart = generateChart;\n\nvar _chartjsNodeCanvas = require(\"chartjs-node-canvas\");\n\nvar _chart = _interopRequireDefault(require(\"chart.js\"));\n\nvar _chartjsPluginDatalabels = _interopRequireDefault(require(\"chartjs-plugin-datalabels\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// import { mdiAirplane } from '@mdi/js';\n// labelmake-template.json > \"fontName\":\"NanumGothic\"\n// type: 'svg' 이거 주면 생성이 안됨 pdf가.\n// const chartJSNodeCanvas = new ChartJSNodeCanvas({ type: 'svg', width: 340, height: 136});\n// global font를 NanumGothic로 통일 시도들\n// 1. generatePdf.js에서 export하고 여기서 import, 그리고 ChartJS.defaults 시도 => 실패\n// const NanumGothic = fs.readFileSync(\"./NanumGothic-Regular.ttf\")\n// const font = {\n//     NanumGothic : {\n//         data: NanumGothic,\n//         subset: false\n//     }\n// };\n// 2. 직접 등록하는 방법 적용 시도 => 실패\n// import { registerFont } from 'canvas';\n// registerFont('./NanumGothic-Regular.ttf', {family:'NanumGothic'})\n// ChartJS.defaults.font.family = 'NanumGothic';\n//\n// ChartJS.defaults.font.family = NanumGothic;\n// ChartJS.defaults.font.family = \"Arial\";\n// ChartJS.defaults.font.family = \"NanumGothic\";\n// ChartJS.defaults.font.size = 40; // 왜, 왜 mean5yrs의 data에만 적용되는거지? 왜지? - 애초에 font는 data에만 적용되고, label에는 적용이 안되는건가?\n// 1. <input data> - rabbitMQ로부터 받아와야 할 것.\n// 1) General Page - Mental Illness\nvar generalMentalIllnessOverallData = [{\n  data: [70, 42, 76, 15, 36, 20],\n  // get from DB\n  fill: false,\n  pointStyle: 'dash',\n  // 그나마 dash가 가장.. but 교체 필요\n  borderWidth: 3,\n  borderColor: 'rgb(0, 0, 0)'\n}, {\n  data: [35, 54, 51, 47, 51, 20],\n  fill: true,\n  backgroundColor: 'rgba(201, 201, 201, 0.4)',\n  pointStyle: 'dash',\n  borderWidth: 1,\n  borderColor: 'rgb(137, 137, 137)'\n}];\nvar generalMentalIllnessMean5yrsData = [{\n  data: [24, 49, 74, 76, 80],\n  // 95까지 datalabels 표현 가능, 만약 마지막해에 작년대비를 넣는다면..  필요한가 근데? 불필요하다고 생각함.\n  barPercentage: 0.7,\n  backgroundColor: []\n}];\nvar generalMentalIllnessEachPHQ9Data = [{\n  data: [25, 75],\n  barPercentage: 0.0\n}]; // const generalMentalIllnessEachGAD7Data = []\n// const generalMentalIllnessEachADNM4Data = []\n// const generalMentalIllnessEachPCPTSD5Data = []\n// const generalMentalIllnessEachKOSSSFData = []\n// const generalMentalIllnessEachP4Data = []\n// 2) General Page - Occupational Stress\n\nvar generalOccuStressOverallMaleData = [{\n  data: [89, 47, 35, 31, 39, 26, 45],\n  // get from DB\n  fill: false,\n  pointStyle: 'dash',\n  // 그나마 dash가 가장..\n  borderWidth: 3,\n  borderColor: 'rgb(0, 0, 0)'\n}, {\n  data: [70, 50, 35, 35, 35, 40, 40],\n  fill: false,\n  pointStyle: 'dash',\n  borderWidth: 1,\n  borderColor: 'rgb(137, 137, 137)'\n}];\nvar generalOccuStressOverallFemaleData = [{\n  data: [36, 47, 35, 31, 39, 67, 45],\n  // get from DB\n  fill: false,\n  pointStyle: 'dash',\n  // 그나마 dash가 가장..\n  borderWidth: 3,\n  borderColor: 'rgb(0, 0, 0)'\n}, {\n  data: [35, 45, 40, 30, 40, 55, 40],\n  fill: false,\n  pointStyle: 'dash',\n  borderWidth: 1,\n  borderColor: 'rgb(137, 137, 137)'\n}];\nvar generalOccuStressMean5yrsMaleData = [{\n  type: 'bar',\n  data: [45, 55, 65, 50, 65],\n  barPercentage: 0.5,\n  backgroundColor: ['rgba(135, 135, 135, 0.4)', 'rgba(135, 135, 135, 0.4)', 'rgba(135, 135, 135, 0.4)', 'rgba(135, 135, 135, 0.4)', 'rgba(33, 33, 33, 0.8)']\n}, {\n  // 마지막 점 옆에는 이 데이터셋의 이름을 넣기. label 살려보면 될까?\n  type: 'line',\n  // label: occuStressLabels[2], // 요인별 결과값 중 가장 높은 것. 지금은 임의의 값\n  data: [50, 40, 80, 70, 90],\n  // 가장 높은 그것의 5개년 추이\n  pointStyle: 'circle',\n  pointBackgroundColor: 'rgb(0, 0, 0)',\n  backgroundColor: 'rgb(0, 0, 0)',\n  borderColor: 'rgb(0, 0, 0)',\n  borderWidth: 1\n}];\nvar generalOccuStressMean5yrsFemaleData = [{\n  type: 'bar',\n  data: [30, 80, 75, 65, 20],\n  barPercentage: 0.5,\n  backgroundColor: ['rgba(135, 135, 135, 0.4)', 'rgba(135, 135, 135, 0.4)', 'rgba(135, 135, 135, 0.4)', 'rgba(135, 135, 135, 0.4)', 'rgba(33, 33, 33, 0.8)']\n}, {\n  type: 'line',\n  data: [50, 40, 70, 60, 30],\n  pointStyle: 'circle',\n  pointBackgroundColor: 'rgb(0, 0, 0)',\n  backgroundColor: 'rgb(0, 0, 0)',\n  borderColor: 'rgb(0, 0, 0)',\n  borderWidth: 1\n}]; // 2. 7 types of canvascanvas\n\nvar radarLargeCanvas = new _chartjsNodeCanvas.ChartJSNodeCanvas({\n  width: 540,\n  height: 450\n});\nvar radarSmallCanvas = new _chartjsNodeCanvas.ChartJSNodeCanvas({\n  width: 540,\n  height: 300\n});\nvar barVerLargeCanvas = new _chartjsNodeCanvas.ChartJSNodeCanvas({\n  width: 540,\n  height: 324\n});\nvar barVerSmallCanvas = new _chartjsNodeCanvas.ChartJSNodeCanvas({\n  width: 540,\n  height: 96\n});\nvar barHorLargeCanvas = new _chartjsNodeCanvas.ChartJSNodeCanvas({\n  width: 480,\n  height: 36\n});\nvar barHorSmallCanvas = new _chartjsNodeCanvas.ChartJSNodeCanvas({\n  width: 240,\n  height: 36\n});\nvar polarAreaCanvas = new _chartjsNodeCanvas.ChartJSNodeCanvas({\n  width: 216,\n  height: 68\n}); // 3. <defaults>\n// labels for hexagon, heptagon\n\nvar now = new Date();\nvar year = now.getFullYear();\nvar mentalIllnessLabels = ['우울감', '불안감', '적응 스트레스', '외상 스트레스', '불면증', '극단적 선택\\n가능성'];\nvar occuStressLabels = ['직무 요구', '직무 자율', '관계 갈등', '직무 불안정', '조직 체계', '보상 부적절', '직장 문화'];\nvar mean5yrsLabels = [year - 4, year - 3, year - 2, year - 1, year]; // hexagon, heptagon default options\n\nvar overallOptions = {\n  scales: {\n    r: {\n      angleLines: {\n        display: false\n      },\n      grid: {\n        color: ['rgb(239, 239, 239)', 'rgb(251, 240, 220)', 'rgb(244, 209, 212)', 'rgb(223, 207, 209)']\n      },\n      pointLabels: {\n        color: 'rgb(0, 0, 0)',\n        font: {\n          family: 'asdf',\n          // 이 font-family를.. 어디선가 등록해야 여기서 불러올 수 있다는게 나의 생각. 그 등록을 어디서 하느냐..가 나의 의문\n          size: 15,\n          // 이게 우울감 등의 크기에 적용되는거보니, font family도 여기서 지정하는게 맞는거 같은데.. how?\n          weight: 700\n        }\n      },\n      ticks: {\n        display: false,\n        stepSize: 25\n      }\n    }\n  },\n  plugins: {\n    legend: {\n      display: false\n    }\n  }\n}; // mean 5years vertical bar default scales - change plugins only.\n\nvar mean5yrsScales = {\n  x: {\n    grid: {\n      display: false\n    },\n    ticks: {\n      font: {\n        size: 18,\n        weight: 'bold',\n        lineHeight: 0\n      },\n      color: ['rgb(0, 0, 0)', 'rgb(0, 0, 0)', 'rgb(0, 0, 0)', 'rgb(0, 0, 0)', 'rgb(0, 0, 0)' // white로 하면 글자 아예 안보이네\n      ],\n      // 연도를 세로로 넣어준 효과는 여기서 -> 가운데로 정렬하는 방법을 연구할 필요가 있음. 아니면 걍 없는게 나은 듯.\n      //autoskip: false,\n      maxRotation: 90,\n      minRotation: 90,\n      padding: -55 // 세로 기준 잡은 padding\n      // padding: -28, // 가로 기준 잡은 padding.\n\n    }\n  },\n  y: {\n    beginAtZero: true,\n    grid: {\n      drawBorder: false,\n      color: ['black', 'rgb(239, 239, 239)', 'rgb(251, 240, 220)', 'rgb(244, 209, 212)', 'rgb(223, 207, 209)'] // black 안넣고 표현 안되나.. 시작이 0이 아니도록.\n\n    },\n    ticks: {\n      display: false,\n      beginAtZero: true,\n      stepSize: 25\n    },\n    min: 0,\n    max: 100\n  }\n}; // each horizontal bar default scalesv\n\nvar eachScales = {\n  x: {\n    grid: {\n      drawBorder: false,\n      display: false\n    },\n    ticks: {\n      display: false\n    },\n    min: 0,\n    max: 100\n  },\n  y: {\n    grid: {\n      drawBorder: false,\n      display: false\n    },\n    ticks: {\n      display: false\n    }\n  }\n};\n\nfunction generateChart() {\n  return _generateChart.apply(this, arguments);\n}\n\nfunction _generateChart() {\n  _generateChart = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var generalMentalIllnessOverallConfig, generalMentalIllnessMean5yrsConfig, i, generalMentalIllnessEachPHQ9Config, generalOccuStressOverallMaleConfig, generalOccuStressOverallFemaleConfig, generalOccuStressMean5yrsMaleConfig, generalOccuStressMean5yrsFemaleConfig, generalMentalIllnessOverallChart, generalMentalIllnessMean5yrsChart, generalMentalIllnessEachPHQ9Chart, generalOccuStressOverallMaleChart, generalOccuStressOverallFemaleChart, generalOccuStressMean5yrsMaleChart, generalOccuStressMean5yrsFemaleChart, charts;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // 4. <configurations>\n            // 1) General Page - Mental Illness\n            generalMentalIllnessOverallConfig = {\n              type: 'radar',\n              data: {\n                labels: mentalIllnessLabels,\n                datasets: generalMentalIllnessOverallData\n              },\n              options: overallOptions\n            };\n            generalMentalIllnessMean5yrsConfig = {\n              type: 'bar',\n              data: {\n                labels: mean5yrsLabels,\n                datasets: generalMentalIllnessMean5yrsData\n              },\n              plugins: [_chartjsPluginDatalabels[\"default\"]],\n              // 이러면 y값이 차트 안으로 들어오긴 한다\n              options: {\n                scales: mean5yrsScales,\n                plugins: {\n                  datalabels: {\n                    // '점' text를 추가하는 것은.. + 경계/위험 등의 추가 이미지.. 불가\n                    color: 'gray',\n                    anchor: 'end',\n                    align: 'top',\n                    // end였다.. 해결!\n                    // offset: 5,\n                    backgroundColor: [],\n                    borderWidth: 10,\n                    borderRadius: 5 // font: {\n                    //     weight: 'bold'\n                    // },\n\n                  },\n                  legend: {\n                    display: false\n                  }\n                }\n              }\n            }; // input data의 value에 따라 bar+value의 배경색으로 정상/경계/위험/심각 표현 + '점' 추가.. 왜 안돼? console에는 잡히는데 음.\n\n            for (i = 0; i < generalMentalIllnessMean5yrsData[0].data.length; i++) {\n              if (generalMentalIllnessMean5yrsData[0].data[i] < 25) {\n                generalMentalIllnessMean5yrsData[0].backgroundColor[i] = 'rgba(239, 239, 239, 0.5)'; // generalMentalIllnessMean5yrsData[0].data[i] = generalMentalIllnessMean5yrsData[0].data[i].toString().concat('                    ') // 이건 잡히는거 보니, 알파벳 문제인가본데.\n                // generalMentalIllnessMean5yrsData[0].data[i] = \"한글\" // 이거 안잡히네. 한글처리 문제다. 음........\n                // generalMentalIllnessMean5yrsData[0].data[i] = \"abc\" // 이거 안잡히네. 그냥 문자열 처리 문제구나.\n\n                generalMentalIllnessMean5yrsConfig.options.plugins.datalabels.backgroundColor[i] = 'rgba(239, 239, 239, 0.5)';\n              } else if (generalMentalIllnessMean5yrsData[0].data[i] < 50) {\n                generalMentalIllnessMean5yrsData[0].backgroundColor[i] = 'rgba(251, 240, 220, 0.5)';\n                generalMentalIllnessMean5yrsConfig.options.plugins.datalabels.backgroundColor[i] = 'rgba(251, 240, 220, 0.5)';\n              } else if (generalMentalIllnessMean5yrsData[0].data[i] < 75) {\n                generalMentalIllnessMean5yrsData[0].backgroundColor[i] = 'rgba(244, 209, 212, 0.5)';\n                generalMentalIllnessMean5yrsConfig.options.plugins.datalabels.backgroundColor[i] = 'rgba(244, 209, 212, 0.5)';\n              } else {\n                generalMentalIllnessMean5yrsData[0].backgroundColor[i] = 'rgba(223, 207, 209, 0.5)';\n                generalMentalIllnessMean5yrsConfig.options.plugins.datalabels.backgroundColor[i] = 'rgba(223, 207, 209, 0.5)';\n              }\n            }\n\n            generalMentalIllnessEachPHQ9Config = {\n              type: 'bar',\n              data: {\n                labels: ['a', 'b'],\n                datasets: generalMentalIllnessEachPHQ9Data\n              },\n              plugins: [_chartjsPluginDatalabels[\"default\"]],\n              // 이러면 y값이 차트 안으로 들어오긴 한다\n              options: {\n                indexAxis: 'y',\n                scales: eachScales,\n                plugins: {\n                  datalabels: {\n                    // 적당한 표현방식만 찾아주면 될 듯. 꼭 수치가 없어도 되지 않을까?\n                    color: ['red', 'blue'],\n                    anchor: 'end',\n                    align: 'center',\n                    // offset:\n                    backgroundColor: ['red', 'blue'],\n                    borderWidth: 5,\n                    borderRadius: 5,\n                    font: {\n                      size: 5,\n                      weight: 'bold'\n                    }\n                  },\n                  legend: {\n                    display: false\n                  }\n                }\n              }\n            }; // const generalMentalIllnessEachGAD7Config = {}\n            // const generalMentalIllnessEachADNM4Config = {}\n            // const generalMentalIllnessEachPCPTSD5Config = {}\n            // const generalMentalIllnessEachKOSSSFConfig = {}\n            // const generalMentalIllnessEachP4Config = {}\n            // 2) General Page - Occupational Stress\n\n            generalOccuStressOverallMaleConfig = {\n              type: 'radar',\n              data: {\n                labels: occuStressLabels,\n                datasets: generalOccuStressOverallMaleData\n              },\n              options: overallOptions\n            };\n            generalOccuStressOverallFemaleConfig = {\n              type: 'radar',\n              data: {\n                labels: occuStressLabels,\n                datasets: generalOccuStressOverallFemaleData\n              },\n              options: overallOptions\n            }; // 직무스트레스 요인별 결과 추가해야(+template도 아직 추가하지 않음)\n\n            generalOccuStressMean5yrsMaleConfig = {\n              data: {\n                labels: mean5yrsLabels,\n                datasets: generalOccuStressMean5yrsMaleData\n              },\n              options: {\n                scales: mean5yrsScales,\n                plugins: {\n                  legend: {\n                    display: false\n                  }\n                }\n              }\n            };\n            generalOccuStressMean5yrsFemaleConfig = {\n              data: {\n                labels: mean5yrsLabels,\n                datasets: generalOccuStressMean5yrsFemaleData\n              },\n              options: {\n                scales: mean5yrsScales,\n                plugins: {\n                  legend: {\n                    display: false\n                  }\n                }\n              }\n            }; // 5. <generate base64 types img through renderToDataURL>\n            // 1) General Page - Mental Illness\n\n            _context.next = 10;\n            return radarLargeCanvas.renderToDataURL(generalMentalIllnessOverallConfig);\n\n          case 10:\n            generalMentalIllnessOverallChart = _context.sent;\n            _context.next = 13;\n            return barVerLargeCanvas.renderToDataURL(generalMentalIllnessMean5yrsConfig);\n\n          case 13:\n            generalMentalIllnessMean5yrsChart = _context.sent;\n            _context.next = 16;\n            return barHorLargeCanvas.renderToDataURL(generalMentalIllnessEachPHQ9Config);\n\n          case 16:\n            generalMentalIllnessEachPHQ9Chart = _context.sent;\n            _context.next = 19;\n            return radarSmallCanvas.renderToDataURL(generalOccuStressOverallMaleConfig);\n\n          case 19:\n            generalOccuStressOverallMaleChart = _context.sent;\n            _context.next = 22;\n            return radarSmallCanvas.renderToDataURL(generalOccuStressOverallFemaleConfig);\n\n          case 22:\n            generalOccuStressOverallFemaleChart = _context.sent;\n            _context.next = 25;\n            return barVerSmallCanvas.renderToDataURL(generalOccuStressMean5yrsMaleConfig);\n\n          case 25:\n            generalOccuStressMean5yrsMaleChart = _context.sent;\n            _context.next = 28;\n            return barVerSmallCanvas.renderToDataURL(generalOccuStressMean5yrsFemaleConfig);\n\n          case 28:\n            generalOccuStressMean5yrsFemaleChart = _context.sent;\n            // 6. <add to charts and return>\n            charts = {\n              // 1) General Page - Mental Illness\n              \"general-mentalIllness-overall\": generalMentalIllnessOverallChart,\n              \"general-mentalIllness-mean5yrs\": generalMentalIllnessMean5yrsChart,\n              \"general-mentalIllness-each-PHQ9\": generalMentalIllnessEachPHQ9Chart,\n              // \"general-mentalIllness-each-GAD7\": generalMentalIllnessEachGAD7Chart,\n              // \"general-mentalIllness-each-ADNM4\": generalMentalIllnessEachADNM4Chart,\n              // \"general-mentalIllness-each-PCPTSD5\": generalMentalIllnessEachPCPTSD5Chart,\n              // \"general-mentalIllness-each-KOSSSF\": generalMentalIllnessEachKOSSSFChart,\n              // \"general-mentalIllness-each-P4\": generalMentalIllnessEachP4Chart,\n              // 2) General Page - Occupational Stress\n              \"general-occuStress-overall-male\": generalOccuStressOverallMaleChart,\n              \"general-occuStress-overall-female\": generalOccuStressOverallFemaleChart,\n              // 직무스트레스 요인별 결과 추가해야(+template도 아직 추가하지 않음)\n              \"general-occuStress-mean5yrs-male\": generalOccuStressMean5yrsMaleChart,\n              \"general-occuStress-mean5yrs-female\": generalOccuStressMean5yrsFemaleChart\n            };\n            return _context.abrupt(\"return\", charts);\n\n          case 31:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _generateChart.apply(this, arguments);\n}\n\n;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "generateChart.js"
      ],
      "names": [
        "generalMentalIllnessOverallData",
        "data",
        "fill",
        "pointStyle",
        "borderWidth",
        "borderColor",
        "backgroundColor",
        "generalMentalIllnessMean5yrsData",
        "barPercentage",
        "generalMentalIllnessEachPHQ9Data",
        "generalOccuStressOverallMaleData",
        "generalOccuStressOverallFemaleData",
        "generalOccuStressMean5yrsMaleData",
        "type",
        "pointBackgroundColor",
        "generalOccuStressMean5yrsFemaleData",
        "radarLargeCanvas",
        "ChartJSNodeCanvas",
        "width",
        "height",
        "radarSmallCanvas",
        "barVerLargeCanvas",
        "barVerSmallCanvas",
        "barHorLargeCanvas",
        "barHorSmallCanvas",
        "polarAreaCanvas",
        "now",
        "Date",
        "year",
        "getFullYear",
        "mentalIllnessLabels",
        "occuStressLabels",
        "mean5yrsLabels",
        "overallOptions",
        "scales",
        "r",
        "angleLines",
        "display",
        "grid",
        "color",
        "pointLabels",
        "font",
        "family",
        "size",
        "weight",
        "ticks",
        "stepSize",
        "plugins",
        "legend",
        "mean5yrsScales",
        "x",
        "lineHeight",
        "maxRotation",
        "minRotation",
        "padding",
        "y",
        "beginAtZero",
        "drawBorder",
        "min",
        "max",
        "eachScales",
        "generateChart",
        "generalMentalIllnessOverallConfig",
        "labels",
        "datasets",
        "options",
        "generalMentalIllnessMean5yrsConfig",
        "ChartDataLabels",
        "datalabels",
        "anchor",
        "align",
        "borderRadius",
        "i",
        "length",
        "generalMentalIllnessEachPHQ9Config",
        "indexAxis",
        "generalOccuStressOverallMaleConfig",
        "generalOccuStressOverallFemaleConfig",
        "generalOccuStressMean5yrsMaleConfig",
        "generalOccuStressMean5yrsFemaleConfig",
        "renderToDataURL",
        "generalMentalIllnessOverallChart",
        "generalMentalIllnessMean5yrsChart",
        "generalMentalIllnessEachPHQ9Chart",
        "generalOccuStressOverallMaleChart",
        "generalOccuStressOverallFemaleChart",
        "generalOccuStressMean5yrsMaleChart",
        "generalOccuStressMean5yrsFemaleChart",
        "charts"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA,IAAMA,+BAA+B,GAAG,CACpC;AACIC,EAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CADV;AACoC;AAChCC,EAAAA,IAAI,EAAE,KAFV;AAGIC,EAAAA,UAAU,EAAE,MAHhB;AAGwB;AACpBC,EAAAA,WAAW,EAAE,CAJjB;AAKIC,EAAAA,WAAW,EAAE;AALjB,CADoC,EAQpC;AACIJ,EAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CADV;AAEIC,EAAAA,IAAI,EAAE,IAFV;AAGII,EAAAA,eAAe,EAAE,0BAHrB;AAIIH,EAAAA,UAAU,EAAE,MAJhB;AAKIC,EAAAA,WAAW,EAAE,CALjB;AAMIC,EAAAA,WAAW,EAAE;AANjB,CARoC,CAAxC;AAgBA,IAAME,gCAAgC,GAAG,CACrC;AACIN,EAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CADV;AACgC;AAC5BO,EAAAA,aAAa,EAAE,GAFnB;AAGIF,EAAAA,eAAe,EAAE;AAHrB,CADqC,CAAzC;AAOA,IAAMG,gCAAgC,GAAG,CACrC;AACIR,EAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,CADV;AAEIO,EAAAA,aAAa,EAAE;AAFnB,CADqC,CAAzC,C,CAMA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAME,gCAAgC,GAAG,CACrC;AACIT,EAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,CADV;AACwC;AACpCC,EAAAA,IAAI,EAAE,KAFV;AAGIC,EAAAA,UAAU,EAAE,MAHhB;AAGwB;AACpBC,EAAAA,WAAW,EAAE,CAJjB;AAKIC,EAAAA,WAAW,EAAE;AALjB,CADqC,EAQrC;AACIJ,EAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,CADV;AAEIC,EAAAA,IAAI,EAAE,KAFV;AAGIC,EAAAA,UAAU,EAAE,MAHhB;AAIIC,EAAAA,WAAW,EAAE,CAJjB;AAKIC,EAAAA,WAAW,EAAE;AALjB,CARqC,CAAzC;AAeA,IAAMM,kCAAkC,GAAG,CACvC;AACIV,EAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,CADV;AACwC;AACpCC,EAAAA,IAAI,EAAE,KAFV;AAGIC,EAAAA,UAAU,EAAE,MAHhB;AAGwB;AACpBC,EAAAA,WAAW,EAAE,CAJjB;AAKIC,EAAAA,WAAW,EAAE;AALjB,CADuC,EAQvC;AACIJ,EAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,CADV;AAEIC,EAAAA,IAAI,EAAE,KAFV;AAGIC,EAAAA,UAAU,EAAE,MAHhB;AAIIC,EAAAA,WAAW,EAAE,CAJjB;AAKIC,EAAAA,WAAW,EAAE;AALjB,CARuC,CAA3C;AAeA,IAAMO,iCAAiC,GAAG,CACtC;AACIC,EAAAA,IAAI,EAAE,KADV;AAEIZ,EAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAFV;AAGIO,EAAAA,aAAa,EAAE,GAHnB;AAIIF,EAAAA,eAAe,EAAE,CACb,0BADa,EAEb,0BAFa,EAGb,0BAHa,EAIb,0BAJa,EAKb,uBALa;AAJrB,CADsC,EAatC;AAAE;AACEO,EAAAA,IAAI,EAAE,MADV;AAEI;AACAZ,EAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAHV;AAGgC;AAC5BE,EAAAA,UAAU,EAAE,QAJhB;AAKIW,EAAAA,oBAAoB,EAAE,cAL1B;AAMIR,EAAAA,eAAe,EAAE,cANrB;AAOID,EAAAA,WAAW,EAAE,cAPjB;AAQID,EAAAA,WAAW,EAAE;AARjB,CAbsC,CAA1C;AAwBA,IAAMW,mCAAmC,GAAG,CACxC;AACIF,EAAAA,IAAI,EAAE,KADV;AAEIZ,EAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAFV;AAGIO,EAAAA,aAAa,EAAE,GAHnB;AAIIF,EAAAA,eAAe,EAAE,CACb,0BADa,EAEb,0BAFa,EAGb,0BAHa,EAIb,0BAJa,EAKb,uBALa;AAJrB,CADwC,EAaxC;AACIO,EAAAA,IAAI,EAAE,MADV;AAEIZ,EAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAFV;AAGIE,EAAAA,UAAU,EAAE,QAHhB;AAIIW,EAAAA,oBAAoB,EAAE,cAJ1B;AAKIR,EAAAA,eAAe,EAAE,cALrB;AAMID,EAAAA,WAAW,EAAE,cANjB;AAOID,EAAAA,WAAW,EAAE;AAPjB,CAbwC,CAA5C,C,CAwBA;;AACA,IAAMY,gBAAgB,GAAG,IAAIC,oCAAJ,CAAsB;AAAEC,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,MAAM,EAAE;AAAtB,CAAtB,CAAzB;AACA,IAAMC,gBAAgB,GAAG,IAAIH,oCAAJ,CAAsB;AAAEC,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,MAAM,EAAE;AAAtB,CAAtB,CAAzB;AACA,IAAME,iBAAiB,GAAG,IAAIJ,oCAAJ,CAAsB;AAAEC,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,MAAM,EAAE;AAAtB,CAAtB,CAA1B;AACA,IAAMG,iBAAiB,GAAG,IAAIL,oCAAJ,CAAsB;AAAEC,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,MAAM,EAAE;AAAtB,CAAtB,CAA1B;AACA,IAAMI,iBAAiB,GAAG,IAAIN,oCAAJ,CAAsB;AAAEC,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,MAAM,EAAE;AAAtB,CAAtB,CAA1B;AACA,IAAMK,iBAAiB,GAAG,IAAIP,oCAAJ,CAAsB;AAAEC,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,MAAM,EAAE;AAAtB,CAAtB,CAA1B;AACA,IAAMM,eAAe,GAAG,IAAIR,oCAAJ,CAAsB;AAAEC,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,MAAM,EAAE;AAAtB,CAAtB,CAAxB,C,CAEA;AACI;;AACJ,IAAMO,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,IAAMC,IAAI,GAAGF,GAAG,CAACG,WAAJ,EAAb;AACA,IAAMC,mBAAmB,GAAG,CACxB,KADwB,EAExB,KAFwB,EAGxB,SAHwB,EAIxB,SAJwB,EAKxB,KALwB,EAMxB,aANwB,CAA5B;AAQA,IAAMC,gBAAgB,GAAG,CACrB,OADqB,EAErB,OAFqB,EAGrB,OAHqB,EAIrB,QAJqB,EAKrB,OALqB,EAMrB,QANqB,EAOrB,OAPqB,CAAzB;AASA,IAAMC,cAAc,GAAG,CACnBJ,IAAI,GAAC,CADc,EAEnBA,IAAI,GAAC,CAFc,EAGnBA,IAAI,GAAC,CAHc,EAInBA,IAAI,GAAC,CAJc,EAKnBA,IALmB,CAAvB,C,CAOI;;AACJ,IAAMK,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,CAAC,EAAE;AACCC,MAAAA,UAAU,EAAE;AACRC,QAAAA,OAAO,EAAE;AADD,OADb;AAICC,MAAAA,IAAI,EAAE;AACFC,QAAAA,KAAK,EAAE,CACJ,oBADI,EAEH,oBAFG,EAGH,oBAHG,EAIH,oBAJG;AADL,OAJP;AAYCC,MAAAA,WAAW,EAAE;AACTD,QAAAA,KAAK,EAAE,cADE;AAETE,QAAAA,IAAI,EAAE;AACFC,UAAAA,MAAM,EAAE,MADN;AACc;AAChBC,UAAAA,IAAI,EAAE,EAFJ;AAEQ;AACVC,UAAAA,MAAM,EAAE;AAHN;AAFG,OAZd;AAoBCC,MAAAA,KAAK,EAAE;AACHR,QAAAA,OAAO,EAAE,KADN;AAEHS,QAAAA,QAAQ,EAAE;AAFP;AApBR;AADC,GADW;AA4BnBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,MAAM,EAAE;AACJX,MAAAA,OAAO,EAAE;AADL;AADH;AA5BU,CAAvB,C,CAkCI;;AACJ,IAAMY,cAAc,GAAG;AACnBC,EAAAA,CAAC,EAAE;AACCZ,IAAAA,IAAI,EAAE;AACFD,MAAAA,OAAO,EAAE;AADP,KADP;AAICQ,IAAAA,KAAK,EAAE;AACHJ,MAAAA,IAAI,EAAE;AACFE,QAAAA,IAAI,EAAE,EADJ;AAEFC,QAAAA,MAAM,EAAE,MAFN;AAGFO,QAAAA,UAAU,EAAE;AAHV,OADH;AAMHZ,MAAAA,KAAK,EAAE,CACH,cADG,EAEH,cAFG,EAGH,cAHG,EAIH,cAJG,EAKH,cALG,CAKa;AALb,OANJ;AAaH;AACA;AACAa,MAAAA,WAAW,EAAE,EAfV;AAgBHC,MAAAA,WAAW,EAAE,EAhBV;AAiBHC,MAAAA,OAAO,EAAE,CAAC,EAjBP,CAiBW;AACd;;AAlBG;AAJR,GADgB;AA2BnBC,EAAAA,CAAC,EAAE;AACCC,IAAAA,WAAW,EAAE,IADd;AAEClB,IAAAA,IAAI,EAAE;AACFmB,MAAAA,UAAU,EAAE,KADV;AAEFlB,MAAAA,KAAK,EAAE,CACH,OADG,EAEH,oBAFG,EAGH,oBAHG,EAIH,oBAJG,EAKH,oBALG,CAFL,CAQC;;AARD,KAFP;AAYCM,IAAAA,KAAK,EAAE;AACHR,MAAAA,OAAO,EAAE,KADN;AAEHmB,MAAAA,WAAW,EAAE,IAFV;AAGHV,MAAAA,QAAQ,EAAE;AAHP,KAZR;AAiBCY,IAAAA,GAAG,EAAE,CAjBN;AAkBCC,IAAAA,GAAG,EAAE;AAlBN;AA3BgB,CAAvB,C,CAiDI;;AACJ,IAAMC,UAAU,GAAI;AAChBV,EAAAA,CAAC,EAAE;AACCZ,IAAAA,IAAI,EAAE;AACFmB,MAAAA,UAAU,EAAE,KADV;AAEFpB,MAAAA,OAAO,EAAE;AAFP,KADP;AAKCQ,IAAAA,KAAK,EAAE;AACHR,MAAAA,OAAO,EAAE;AADN,KALR;AAQCqB,IAAAA,GAAG,EAAE,CARN;AASCC,IAAAA,GAAG,EAAE;AATN,GADa;AAYhBJ,EAAAA,CAAC,EAAE;AACCjB,IAAAA,IAAI,EAAE;AACFmB,MAAAA,UAAU,EAAE,KADV;AAEFpB,MAAAA,OAAO,EAAE;AAFP,KADP;AAKCQ,IAAAA,KAAK,EAAE;AACHR,MAAAA,OAAO,EAAE;AADN;AALR;AAZa,CAApB;;SAwBewB,a;;;;;2EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AACI;AACEC,YAAAA,iCAHV,GAG8C;AACtCjD,cAAAA,IAAI,EAAE,OADgC;AAEtCZ,cAAAA,IAAI,EAAE;AACF8D,gBAAAA,MAAM,EAAEjC,mBADN;AAEFkC,gBAAAA,QAAQ,EAAEhE;AAFR,eAFgC;AAMtCiE,cAAAA,OAAO,EAAEhC;AAN6B,aAH9C;AAWUiC,YAAAA,kCAXV,GAW+C;AACvCrD,cAAAA,IAAI,EAAE,KADiC;AAEvCZ,cAAAA,IAAI,EAAE;AACF8D,gBAAAA,MAAM,EAAE/B,cADN;AAEFgC,gBAAAA,QAAQ,EAAEzD;AAFR,eAFiC;AAMvCwC,cAAAA,OAAO,EAAE,CAACoB,mCAAD,CAN8B;AAMX;AAC5BF,cAAAA,OAAO,EAAE;AACL/B,gBAAAA,MAAM,EAAEe,cADH;AAELF,gBAAAA,OAAO,EAAE;AACLqB,kBAAAA,UAAU,EAAE;AAAE;AACV7B,oBAAAA,KAAK,EAAE,MADC;AAER8B,oBAAAA,MAAM,EAAE,KAFA;AAGRC,oBAAAA,KAAK,EAAE,KAHC;AAGM;AACd;AACAhE,oBAAAA,eAAe,EAAE,EALT;AAMRF,oBAAAA,WAAW,EAAE,EANL;AAORmE,oBAAAA,YAAY,EAAE,CAPN,CAQR;AACA;AACA;;AAVQ,mBADP;AAaLvB,kBAAAA,MAAM,EAAE;AACJX,oBAAAA,OAAO,EAAE;AADL;AAbH;AAFJ;AAP8B,aAX/C,EAuCI;;AACA,iBAASmC,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGjE,gCAAgC,CAAC,CAAD,CAAhC,CAAoCN,IAApC,CAAyCwE,MAA7D,EAAqED,CAAC,EAAtE,EAA0E;AACtE,kBAAIjE,gCAAgC,CAAC,CAAD,CAAhC,CAAoCN,IAApC,CAAyCuE,CAAzC,IAA8C,EAAlD,EAAsD;AAClDjE,gBAAAA,gCAAgC,CAAC,CAAD,CAAhC,CAAoCD,eAApC,CAAoDkE,CAApD,IAAyD,0BAAzD,CADkD,CAElD;AACA;AACA;;AACAN,gBAAAA,kCAAkC,CAACD,OAAnC,CAA2ClB,OAA3C,CAAmDqB,UAAnD,CAA8D9D,eAA9D,CAA8EkE,CAA9E,IAAmF,0BAAnF;AACH,eAND,MAMO,IAAIjE,gCAAgC,CAAC,CAAD,CAAhC,CAAoCN,IAApC,CAAyCuE,CAAzC,IAA8C,EAAlD,EAAsD;AACzDjE,gBAAAA,gCAAgC,CAAC,CAAD,CAAhC,CAAoCD,eAApC,CAAoDkE,CAApD,IAAyD,0BAAzD;AACAN,gBAAAA,kCAAkC,CAACD,OAAnC,CAA2ClB,OAA3C,CAAmDqB,UAAnD,CAA8D9D,eAA9D,CAA8EkE,CAA9E,IAAmF,0BAAnF;AACH,eAHM,MAGA,IAAIjE,gCAAgC,CAAC,CAAD,CAAhC,CAAoCN,IAApC,CAAyCuE,CAAzC,IAA8C,EAAlD,EAAsD;AACzDjE,gBAAAA,gCAAgC,CAAC,CAAD,CAAhC,CAAoCD,eAApC,CAAoDkE,CAApD,IAAyD,0BAAzD;AACAN,gBAAAA,kCAAkC,CAACD,OAAnC,CAA2ClB,OAA3C,CAAmDqB,UAAnD,CAA8D9D,eAA9D,CAA8EkE,CAA9E,IAAmF,0BAAnF;AACH,eAHM,MAGA;AACHjE,gBAAAA,gCAAgC,CAAC,CAAD,CAAhC,CAAoCD,eAApC,CAAoDkE,CAApD,IAAyD,0BAAzD;AACAN,gBAAAA,kCAAkC,CAACD,OAAnC,CAA2ClB,OAA3C,CAAmDqB,UAAnD,CAA8D9D,eAA9D,CAA8EkE,CAA9E,IAAmF,0BAAnF;AACH;AACJ;;AAEKE,YAAAA,kCA3DV,GA2D+C;AACvC7D,cAAAA,IAAI,EAAE,KADiC;AAEvCZ,cAAAA,IAAI,EAAE;AACF8D,gBAAAA,MAAM,EAAE,CAAC,GAAD,EAAK,GAAL,CADN;AAEFC,gBAAAA,QAAQ,EAAEvD;AAFR,eAFiC;AAMvCsC,cAAAA,OAAO,EAAE,CAACoB,mCAAD,CAN8B;AAMX;AAC5BF,cAAAA,OAAO,EAAE;AACLU,gBAAAA,SAAS,EAAE,GADN;AAELzC,gBAAAA,MAAM,EAAE0B,UAFH;AAGLb,gBAAAA,OAAO,EAAE;AACLqB,kBAAAA,UAAU,EAAE;AAAE;AACV7B,oBAAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,MAAR,CADC;AAER8B,oBAAAA,MAAM,EAAE,KAFA;AAGRC,oBAAAA,KAAK,EAAE,QAHC;AAIR;AACAhE,oBAAAA,eAAe,EAAE,CAAC,KAAD,EAAQ,MAAR,CALT;AAMRF,oBAAAA,WAAW,EAAE,CANL;AAORmE,oBAAAA,YAAY,EAAE,CAPN;AAQR9B,oBAAAA,IAAI,EAAE;AACFE,sBAAAA,IAAI,EAAE,CADJ;AAEFC,sBAAAA,MAAM,EAAE;AAFN;AARE,mBADP;AAcLI,kBAAAA,MAAM,EAAE;AACJX,oBAAAA,OAAO,EAAE;AADL;AAdH;AAHJ;AAP8B,aA3D/C,EAyFI;AACA;AACA;AACA;AACA;AAEI;;AACEuC,YAAAA,kCAhGV,GAgG+C;AACvC/D,cAAAA,IAAI,EAAE,OADiC;AAEvCZ,cAAAA,IAAI,EAAE;AACF8D,gBAAAA,MAAM,EAAEhC,gBADN;AAEFiC,gBAAAA,QAAQ,EAAEtD;AAFR,eAFiC;AAMvCuD,cAAAA,OAAO,EAAEhC;AAN8B,aAhG/C;AAwGU4C,YAAAA,oCAxGV,GAwGiD;AACzChE,cAAAA,IAAI,EAAE,OADmC;AAEzCZ,cAAAA,IAAI,EAAE;AACF8D,gBAAAA,MAAM,EAAEhC,gBADN;AAEFiC,gBAAAA,QAAQ,EAAErD;AAFR,eAFmC;AAMzCsD,cAAAA,OAAO,EAAEhC;AANgC,aAxGjD,EAgHI;;AACM6C,YAAAA,mCAjHV,GAiHgD;AACxC7E,cAAAA,IAAI,EAAE;AACF8D,gBAAAA,MAAM,EAAE/B,cADN;AAEFgC,gBAAAA,QAAQ,EAAEpD;AAFR,eADkC;AAKxCqD,cAAAA,OAAO,EAAE;AACL/B,gBAAAA,MAAM,EAAEe,cADH;AAELF,gBAAAA,OAAO,EAAE;AACLC,kBAAAA,MAAM,EAAE;AACJX,oBAAAA,OAAO,EAAE;AADL;AADH;AAFJ;AAL+B,aAjHhD;AA+HU0C,YAAAA,qCA/HV,GA+HkD;AAC1C9E,cAAAA,IAAI,EAAE;AACF8D,gBAAAA,MAAM,EAAE/B,cADN;AAEFgC,gBAAAA,QAAQ,EAAEjD;AAFR,eADoC;AAK1CkD,cAAAA,OAAO,EAAE;AACL/B,gBAAAA,MAAM,EAAEe,cADH;AAELF,gBAAAA,OAAO,EAAE;AACLC,kBAAAA,MAAM,EAAE;AACJX,oBAAAA,OAAO,EAAE;AADL;AADH;AAFJ;AALiC,aA/HlD,EA8II;AACI;;AA/IR;AAAA,mBAgJmDrB,gBAAgB,CAACgE,eAAjB,CAAiClB,iCAAjC,CAhJnD;;AAAA;AAgJUmB,YAAAA,gCAhJV;AAAA;AAAA,mBAiJqD5D,iBAAiB,CAAC2D,eAAlB,CAAkCd,kCAAlC,CAjJrD;;AAAA;AAiJUgB,YAAAA,iCAjJV;AAAA;AAAA,mBAkJoD3D,iBAAiB,CAACyD,eAAlB,CAAkCN,kCAAlC,CAlJpD;;AAAA;AAkJUS,YAAAA,iCAlJV;AAAA;AAAA,mBA0JoD/D,gBAAgB,CAAC4D,eAAjB,CAAiCJ,kCAAjC,CA1JpD;;AAAA;AA0JUQ,YAAAA,iCA1JV;AAAA;AAAA,mBA2JsDhE,gBAAgB,CAAC4D,eAAjB,CAAiCH,oCAAjC,CA3JtD;;AAAA;AA2JUQ,YAAAA,mCA3JV;AAAA;AAAA,mBA6JqD/D,iBAAiB,CAAC0D,eAAlB,CAAkCF,mCAAlC,CA7JrD;;AAAA;AA6JUQ,YAAAA,kCA7JV;AAAA;AAAA,mBA8JuDhE,iBAAiB,CAAC0D,eAAlB,CAAkCD,qCAAlC,CA9JvD;;AAAA;AA8JUQ,YAAAA,oCA9JV;AAgKI;AACMC,YAAAA,MAjKV,GAiKmB;AACX;AACA,+CAAiCP,gCAFtB;AAGX,gDAAkCC,iCAHvB;AAIX,iDAAmCC,iCAJxB;AAKX;AACA;AACA;AACA;AACA;AAEA;AACA,iDAAmCC,iCAZxB;AAaX,mDAAqCC,mCAb1B;AAcX;AACA,kDAAoCC,kCAfzB;AAgBX,oDAAsCC;AAhB3B,aAjKnB;AAAA,6CAmLWC,MAnLX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAoLC",
      "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
      "sourcesContent": [
        "import { ChartJSNodeCanvas } from 'chartjs-node-canvas';\nimport ChartJS from 'chart.js';\nimport ChartDataLabels from 'chartjs-plugin-datalabels'\nimport fs from \"fs\";\n\n// import { mdiAirplane } from '@mdi/js';\n\n// labelmake-template.json > \"fontName\":\"NanumGothic\"\n\n\n// type: 'svg' 이거 주면 생성이 안됨 pdf가.\n// const chartJSNodeCanvas = new ChartJSNodeCanvas({ type: 'svg', width: 340, height: 136});\n\n// global font를 NanumGothic로 통일 시도들\n// 1. generatePdf.js에서 export하고 여기서 import, 그리고 ChartJS.defaults 시도 => 실패\n// const NanumGothic = fs.readFileSync(\"./NanumGothic-Regular.ttf\")\n// const font = {\n//     NanumGothic : {\n//         data: NanumGothic,\n//         subset: false\n//     }\n// };\n// 2. 직접 등록하는 방법 적용 시도 => 실패\n// import { registerFont } from 'canvas';\n// registerFont('./NanumGothic-Regular.ttf', {family:'NanumGothic'})\n// ChartJS.defaults.font.family = 'NanumGothic';\n//\n// ChartJS.defaults.font.family = NanumGothic;\n// ChartJS.defaults.font.family = \"Arial\";\n// ChartJS.defaults.font.family = \"NanumGothic\";\n// ChartJS.defaults.font.size = 40; // 왜, 왜 mean5yrs의 data에만 적용되는거지? 왜지? - 애초에 font는 data에만 적용되고, label에는 적용이 안되는건가?\n\n\n// 1. <input data> - rabbitMQ로부터 받아와야 할 것.\n// 1) General Page - Mental Illness\nconst generalMentalIllnessOverallData = [\n    {\n        data: [70, 42, 76, 15, 36, 20], // get from DB\n        fill: false,\n        pointStyle: 'dash', // 그나마 dash가 가장.. but 교체 필요\n        borderWidth: 3,\n        borderColor: 'rgb(0, 0, 0)',\n    },\n    {\n        data: [35, 54, 51, 47, 51, 20],\n        fill: true,\n        backgroundColor: 'rgba(201, 201, 201, 0.4)',\n        pointStyle: 'dash',\n        borderWidth: 1,\n        borderColor: 'rgb(137, 137, 137)',\n    }]\nconst generalMentalIllnessMean5yrsData = [\n    {\n        data: [24, 49, 74, 76, 80], // 95까지 datalabels 표현 가능, 만약 마지막해에 작년대비를 넣는다면..  필요한가 근데? 불필요하다고 생각함.\n        barPercentage: 0.7,\n        backgroundColor: [],\n    }\n]\nconst generalMentalIllnessEachPHQ9Data = [\n    {\n        data: [25, 75],\n        barPercentage: 0.0,\n    }\n]\n// const generalMentalIllnessEachGAD7Data = []\n// const generalMentalIllnessEachADNM4Data = []\n// const generalMentalIllnessEachPCPTSD5Data = []\n// const generalMentalIllnessEachKOSSSFData = []\n// const generalMentalIllnessEachP4Data = []\n// 2) General Page - Occupational Stress\nconst generalOccuStressOverallMaleData = [\n    {\n        data: [89, 47, 35, 31, 39, 26, 45], // get from DB\n        fill: false,\n        pointStyle: 'dash', // 그나마 dash가 가장..\n        borderWidth: 3,\n        borderColor: 'rgb(0, 0, 0)',\n    },\n    {\n        data: [70, 50, 35, 35, 35, 40, 40],\n        fill: false,\n        pointStyle: 'dash',\n        borderWidth: 1,\n        borderColor: 'rgb(137, 137, 137)',\n    }]\nconst generalOccuStressOverallFemaleData = [\n    {\n        data: [36, 47, 35, 31, 39, 67, 45], // get from DB\n        fill: false,\n        pointStyle: 'dash', // 그나마 dash가 가장..\n        borderWidth: 3,\n        borderColor: 'rgb(0, 0, 0)',\n    },\n    {\n        data: [35, 45, 40, 30, 40, 55, 40],\n        fill: false,\n        pointStyle: 'dash',\n        borderWidth: 1,\n        borderColor: 'rgb(137, 137, 137)',\n    }]\nconst generalOccuStressMean5yrsMaleData = [\n    {\n        type: 'bar',\n        data: [45, 55, 65, 50, 65],\n        barPercentage: 0.5,\n        backgroundColor: [\n            'rgba(135, 135, 135, 0.4)',\n            'rgba(135, 135, 135, 0.4)',\n            'rgba(135, 135, 135, 0.4)',\n            'rgba(135, 135, 135, 0.4)',\n            'rgba(33, 33, 33, 0.8)',\n        ],\n    },\n    { // 마지막 점 옆에는 이 데이터셋의 이름을 넣기. label 살려보면 될까?\n        type: 'line',\n        // label: occuStressLabels[2], // 요인별 결과값 중 가장 높은 것. 지금은 임의의 값\n        data: [50, 40, 80, 70, 90], // 가장 높은 그것의 5개년 추이\n        pointStyle: 'circle',\n        pointBackgroundColor: 'rgb(0, 0, 0)',\n        backgroundColor: 'rgb(0, 0, 0)',\n        borderColor: 'rgb(0, 0, 0)',\n        borderWidth: 1\n    }\n]\nconst generalOccuStressMean5yrsFemaleData = [\n    {\n        type: 'bar',\n        data: [30, 80, 75, 65, 20],\n        barPercentage: 0.5,\n        backgroundColor: [\n            'rgba(135, 135, 135, 0.4)',\n            'rgba(135, 135, 135, 0.4)',\n            'rgba(135, 135, 135, 0.4)',\n            'rgba(135, 135, 135, 0.4)',\n            'rgba(33, 33, 33, 0.8)',\n        ],\n    },\n    {\n        type: 'line',\n        data: [50, 40, 70, 60, 30],\n        pointStyle: 'circle',\n        pointBackgroundColor: 'rgb(0, 0, 0)',\n        backgroundColor: 'rgb(0, 0, 0)',\n        borderColor: 'rgb(0, 0, 0)',\n        borderWidth: 1\n    }\n]\n\n// 2. 7 types of canvascanvas\nconst radarLargeCanvas = new ChartJSNodeCanvas({ width: 540, height: 450 });\nconst radarSmallCanvas = new ChartJSNodeCanvas({ width: 540, height: 300 });\nconst barVerLargeCanvas = new ChartJSNodeCanvas({ width: 540, height: 324 });\nconst barVerSmallCanvas = new ChartJSNodeCanvas({ width: 540, height: 96 });\nconst barHorLargeCanvas = new ChartJSNodeCanvas({ width: 480, height: 36 });\nconst barHorSmallCanvas = new ChartJSNodeCanvas({ width: 240, height: 36 });\nconst polarAreaCanvas = new ChartJSNodeCanvas({ width: 216, height: 68 });\n\n// 3. <defaults>\n    // labels for hexagon, heptagon\nconst now = new Date();\nconst year = now.getFullYear();\nconst mentalIllnessLabels = [\n    '우울감',\n    '불안감',\n    '적응 스트레스',\n    '외상 스트레스',\n    '불면증',\n    '극단적 선택\\n가능성',\n]\nconst occuStressLabels = [\n    '직무 요구',\n    '직무 자율',\n    '관계 갈등',\n    '직무 불안정',\n    '조직 체계',\n    '보상 부적절',\n    '직장 문화',\n]\nconst mean5yrsLabels = [\n    year-4,\n    year-3,\n    year-2,\n    year-1,\n    year,\n]\n    // hexagon, heptagon default options\nconst overallOptions = {\n    scales: {\n        r: {\n            angleLines: {\n                display: false\n            },\n            grid: {\n                color: [\n                   'rgb(239, 239, 239)',\n                    'rgb(251, 240, 220)',\n                    'rgb(244, 209, 212)',\n                    'rgb(223, 207, 209)'\n                ]\n            },\n            pointLabels: {\n                color: 'rgb(0, 0, 0)',\n                font: {\n                    family: 'asdf', // 이 font-family를.. 어디선가 등록해야 여기서 불러올 수 있다는게 나의 생각. 그 등록을 어디서 하느냐..가 나의 의문\n                    size: 15, // 이게 우울감 등의 크기에 적용되는거보니, font family도 여기서 지정하는게 맞는거 같은데.. how?\n                    weight: 700\n                }\n            },\n            ticks: {\n                display: false,\n                stepSize: 25\n            }\n        },\n    },\n    plugins: {\n        legend: {\n            display: false\n        }\n    }\n}\n    // mean 5years vertical bar default scales - change plugins only.\nconst mean5yrsScales = {\n    x: {\n        grid: {\n            display: false\n        },\n        ticks: {\n            font: {\n                size: 18,\n                weight: 'bold',\n                lineHeight: 0\n            },\n            color: [\n                'rgb(0, 0, 0)',\n                'rgb(0, 0, 0)',\n                'rgb(0, 0, 0)',\n                'rgb(0, 0, 0)',\n                'rgb(0, 0, 0)', // white로 하면 글자 아예 안보이네\n            ],\n            // 연도를 세로로 넣어준 효과는 여기서 -> 가운데로 정렬하는 방법을 연구할 필요가 있음. 아니면 걍 없는게 나은 듯.\n            //autoskip: false,\n            maxRotation: 90,\n            minRotation: 90,\n            padding: -55, // 세로 기준 잡은 padding\n            // padding: -28, // 가로 기준 잡은 padding.\n\n        },\n    },\n    y: {\n        beginAtZero: true,\n        grid: {\n            drawBorder: false,\n            color: [\n                'black',\n                'rgb(239, 239, 239)',\n                'rgb(251, 240, 220)',\n                'rgb(244, 209, 212)',\n                'rgb(223, 207, 209)'\n            ], // black 안넣고 표현 안되나.. 시작이 0이 아니도록.\n        },\n        ticks: {\n            display: false,\n            beginAtZero: true,\n            stepSize: 25,\n        },\n        min: 0,\n        max: 100,\n    }\n}\n\n    // each horizontal bar default scalesv\nconst eachScales =  {\n    x: {\n        grid: {\n            drawBorder: false,\n            display: false\n        },\n        ticks: {\n            display: false,\n        },\n        min: 0,\n        max: 100,\n    },\n    y: {\n        grid: {\n            drawBorder: false,\n            display: false,\n        },\n        ticks: {\n            display: false,\n        }\n    }\n}\n\n\nasync function generateChart() {\n    // 4. <configurations>\n        // 1) General Page - Mental Illness\n    const generalMentalIllnessOverallConfig = {\n        type: 'radar',\n        data: {\n            labels: mentalIllnessLabels,\n            datasets: generalMentalIllnessOverallData,\n        },\n        options: overallOptions,\n    };\n    const generalMentalIllnessMean5yrsConfig = {\n        type: 'bar',\n        data: {\n            labels: mean5yrsLabels,\n            datasets: generalMentalIllnessMean5yrsData\n        },\n        plugins: [ChartDataLabels], // 이러면 y값이 차트 안으로 들어오긴 한다\n        options: {\n            scales: mean5yrsScales,\n            plugins: {\n                datalabels: { // '점' text를 추가하는 것은.. + 경계/위험 등의 추가 이미지.. 불가\n                    color: 'gray',\n                    anchor: 'end',\n                    align: 'top', // end였다.. 해결!\n                    // offset: 5,\n                    backgroundColor: [],\n                    borderWidth: 10,\n                    borderRadius: 5,\n                    // font: {\n                    //     weight: 'bold'\n                    // },\n                },\n                legend: {\n                    display: false\n                }\n            }\n        },\n    };\n    // input data의 value에 따라 bar+value의 배경색으로 정상/경계/위험/심각 표현 + '점' 추가.. 왜 안돼? console에는 잡히는데 음.\n    for( let i = 0; i < generalMentalIllnessMean5yrsData[0].data.length; i++) {\n        if (generalMentalIllnessMean5yrsData[0].data[i] < 25) {\n            generalMentalIllnessMean5yrsData[0].backgroundColor[i] = 'rgba(239, 239, 239, 0.5)'\n            // generalMentalIllnessMean5yrsData[0].data[i] = generalMentalIllnessMean5yrsData[0].data[i].toString().concat('                    ') // 이건 잡히는거 보니, 알파벳 문제인가본데.\n            // generalMentalIllnessMean5yrsData[0].data[i] = \"한글\" // 이거 안잡히네. 한글처리 문제다. 음........\n            // generalMentalIllnessMean5yrsData[0].data[i] = \"abc\" // 이거 안잡히네. 그냥 문자열 처리 문제구나.\n            generalMentalIllnessMean5yrsConfig.options.plugins.datalabels.backgroundColor[i] = 'rgba(239, 239, 239, 0.5)'\n        } else if (generalMentalIllnessMean5yrsData[0].data[i] < 50) {\n            generalMentalIllnessMean5yrsData[0].backgroundColor[i] = 'rgba(251, 240, 220, 0.5)'\n            generalMentalIllnessMean5yrsConfig.options.plugins.datalabels.backgroundColor[i] = 'rgba(251, 240, 220, 0.5)'\n        } else if (generalMentalIllnessMean5yrsData[0].data[i] < 75) {\n            generalMentalIllnessMean5yrsData[0].backgroundColor[i] = 'rgba(244, 209, 212, 0.5)'\n            generalMentalIllnessMean5yrsConfig.options.plugins.datalabels.backgroundColor[i] = 'rgba(244, 209, 212, 0.5)'\n        } else {\n            generalMentalIllnessMean5yrsData[0].backgroundColor[i] = 'rgba(223, 207, 209, 0.5)'\n            generalMentalIllnessMean5yrsConfig.options.plugins.datalabels.backgroundColor[i] = 'rgba(223, 207, 209, 0.5)'\n        }\n    }\n\n    const generalMentalIllnessEachPHQ9Config = {\n        type: 'bar',\n        data: {\n            labels: ['a','b'],\n            datasets: generalMentalIllnessEachPHQ9Data\n        },\n        plugins: [ChartDataLabels], // 이러면 y값이 차트 안으로 들어오긴 한다\n        options: {\n            indexAxis: 'y',\n            scales: eachScales,\n            plugins: {\n                datalabels: { // 적당한 표현방식만 찾아주면 될 듯. 꼭 수치가 없어도 되지 않을까?\n                    color: ['red', 'blue'],\n                    anchor: 'end',\n                    align: 'center',\n                    // offset:\n                    backgroundColor: ['red', 'blue'],\n                    borderWidth: 5,\n                    borderRadius: 5,\n                    font: {\n                        size: 5,\n                        weight: 'bold'\n                    },\n                },\n                legend: {\n                    display: false\n                }\n            }\n        },\n    };\n    // const generalMentalIllnessEachGAD7Config = {}\n    // const generalMentalIllnessEachADNM4Config = {}\n    // const generalMentalIllnessEachPCPTSD5Config = {}\n    // const generalMentalIllnessEachKOSSSFConfig = {}\n    // const generalMentalIllnessEachP4Config = {}\n\n        // 2) General Page - Occupational Stress\n    const generalOccuStressOverallMaleConfig = {\n        type: 'radar',\n        data: {\n            labels: occuStressLabels,\n            datasets: generalOccuStressOverallMaleData,\n        },\n        options: overallOptions,\n    };\n    const generalOccuStressOverallFemaleConfig = {\n        type: 'radar',\n        data: {\n            labels: occuStressLabels,\n            datasets: generalOccuStressOverallFemaleData,\n        },\n        options: overallOptions,\n    };\n    // 직무스트레스 요인별 결과 추가해야(+template도 아직 추가하지 않음)\n    const generalOccuStressMean5yrsMaleConfig = {\n        data: {\n            labels: mean5yrsLabels,\n            datasets: generalOccuStressMean5yrsMaleData\n        },\n        options: {\n            scales: mean5yrsScales,\n            plugins: {\n                legend: {\n                    display: false\n                }\n            },\n        },\n    };\n    const generalOccuStressMean5yrsFemaleConfig = {\n        data: {\n            labels: mean5yrsLabels,\n            datasets: generalOccuStressMean5yrsFemaleData\n        },\n        options: {\n            scales: mean5yrsScales,\n            plugins: {\n                legend: {\n                    display: false\n                }\n            },\n        },\n    };\n\n    // 5. <generate base64 types img through renderToDataURL>\n        // 1) General Page - Mental Illness\n    const generalMentalIllnessOverallChart = await radarLargeCanvas.renderToDataURL(generalMentalIllnessOverallConfig);\n    const generalMentalIllnessMean5yrsChart  = await barVerLargeCanvas.renderToDataURL(generalMentalIllnessMean5yrsConfig);\n    const generalMentalIllnessEachPHQ9Chart = await barHorLargeCanvas.renderToDataURL(generalMentalIllnessEachPHQ9Config);\n    // const generalMentalIllnessEachGAD7Chart = await barHorLargeCanvas.renderToDataURL(generalMentalIllnessEachGAD7Config);\n    // const generalMentalIllnessEachADNM4Chart = await barHorLargeCanvas.renderToDataURL(generalMentalIllnessEachADNM4Config);\n    // const generalMentalIllnessEachPCPTSD5Chart = await barHorLargeCanvas.renderToDataURL(generalMentalIllnessEachPCPTSD5Config);\n    // const generalMentalIllnessEachKOSSSFChart = await barHorLargeCanvas.renderToDataURL(generalMentalIllnessEachKOSSSFConfig);\n    // const generalMentalIllnessEachP4Chart = await barHorLargeCanvas.renderToDataURL(generalMentalIllnessEachP4Config);\n\n    // 2) General Page - Occupational Stress\n    const generalOccuStressOverallMaleChart = await radarSmallCanvas.renderToDataURL(generalOccuStressOverallMaleConfig);\n    const generalOccuStressOverallFemaleChart = await radarSmallCanvas.renderToDataURL(generalOccuStressOverallFemaleConfig);\n    // 직무스트레스 요인별 결과 추가해야(+template도 아직 추가하지 않음) - barHorSmallCanvas\n    const generalOccuStressMean5yrsMaleChart = await barVerSmallCanvas.renderToDataURL(generalOccuStressMean5yrsMaleConfig);\n    const generalOccuStressMean5yrsFemaleChart = await barVerSmallCanvas.renderToDataURL(generalOccuStressMean5yrsFemaleConfig);\n\n    // 6. <add to charts and return>\n    const charts = {\n        // 1) General Page - Mental Illness\n        \"general-mentalIllness-overall\": generalMentalIllnessOverallChart,\n        \"general-mentalIllness-mean5yrs\": generalMentalIllnessMean5yrsChart,\n        \"general-mentalIllness-each-PHQ9\": generalMentalIllnessEachPHQ9Chart,\n        // \"general-mentalIllness-each-GAD7\": generalMentalIllnessEachGAD7Chart,\n        // \"general-mentalIllness-each-ADNM4\": generalMentalIllnessEachADNM4Chart,\n        // \"general-mentalIllness-each-PCPTSD5\": generalMentalIllnessEachPCPTSD5Chart,\n        // \"general-mentalIllness-each-KOSSSF\": generalMentalIllnessEachKOSSSFChart,\n        // \"general-mentalIllness-each-P4\": generalMentalIllnessEachP4Chart,\n\n        // 2) General Page - Occupational Stress\n        \"general-occuStress-overall-male\": generalOccuStressOverallMaleChart,\n        \"general-occuStress-overall-female\": generalOccuStressOverallFemaleChart,\n        // 직무스트레스 요인별 결과 추가해야(+template도 아직 추가하지 않음)\n        \"general-occuStress-mean5yrs-male\": generalOccuStressMean5yrsMaleChart,\n        \"general-occuStress-mean5yrs-female\": generalOccuStressMean5yrsFemaleChart,\n    }\n    return charts\n};\n\nexport { generateChart };\n\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1641371864178
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2\",\"filename\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/DB.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2",
      "filename": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/DB.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/DB.js",
        "plugins": [
          "classStaticBlock",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/DB.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
        "sourceFileName": "DB.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getData = getData;\nvar dataList = [// rabbitMQ에서 가져오는 것을 어떻게 표현할지?\n{\n  \"mainpage-description\": \"TESS의 직장 마음 건강 보고서는 챗봇을 통한 자가보고형식 설문과 HRV 측정값을 기반으로 통계적인 분석을 통해 결과를 제공합니다. TESS 보고서에서 제공하는 결과값은 직무별로 대분류, 중분류, 소분류로 나누어 통계를 제공하는 형식입니다.\",\n  \"mainpage-company\": {\n    \"distinct-number\": \"9876BA54321DC\",\n    \"company-name\": \"주식회사 하이\",\n    \"company-catagory\": \"(ICT업)\",\n    // ( ) 자동생성 how?\n    \"sort-of-check\": \"직무 스트레스 외 6종\",\n    \"request-date\": \"2021-10-30\",\n    \"response-date\": \"2021-11-30\"\n  },\n  \"mainpage-solution\": \"직무스트레스, 우울감, 적응스트레스 의심. \\n\\n우울감, 적응스트레스에 위험 수준의 위험이 도출되어 주의가 필요한 상황임. 직무 스트레스와 외상 스트레스는 중간 수준의 위험이 도출되어 지속적인 관리가 필요함.\",\n  \"mainpage-result1\": \"전체 결과표는 방사형 그래프로 6가지 정신질환에 대한 전체 결과를 보여줍니다.\",\n  \"mainpage-result2\": \"6가지 정신질환에 대한 증상별 전체 결과를 보여줍니다. 비교 수치를 안내해 위험 정도를 안내합니다.\",\n  \"mainpage-result3\": \"남녀 직원의 직무 스트레스를 나타낸 보고서입니다.\",\n  \"mainpage-result4\": \"남성의 경우 직무 스트레스 요소 중 직무 요구도가 89점으로 상위 25%에 해당합니다. 여성의 경우 직무 스트레스 요소 중 보상 부적절이 67점으로 상위 50%에 해당합니다.\",\n  \"mainpage-result5\": \"직무 스트레스의 경우 남성과 여성의 직무 스트레스 요인이 다르게 나타납니다.\",\n  \"mainpage-result6\": \"이에 따라 남성과 여성으로 구분하여 전체 결과, 요인별 결과, 5개년 직무 스트레스 평균을 보여줍니다.\",\n  \"level1page-result1\": \"본 회사의 직무 대분류는 6가지로 사업관리, 경영/회계/사무, 법률/경찰/소방/교도/국방, 문화/예술/디자인/방송, 영업판매, 정보통신으로 나뉩니다.\",\n  \"level1page-result2\": \"정보통신 분야 소속 직원들의 전반적인 마음 건강이 위험합니다. 그 다음으로는 영업판매 분야 소속 직원들이 마음 건강이 좋지 않은 것으로 보입니다.\"\n}];\n\nfunction getData(key) {\n  return dataList[0][key]; // object 내의 object의 value를 뽑아내는 것을 간편히 하기 위한 code 필요\n}\n\n;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRCLmpzIl0sIm5hbWVzIjpbImRhdGFMaXN0IiwiZ2V0RGF0YSIsImtleSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTUEsUUFBUSxHQUFHLENBQUU7QUFDZjtBQUNJLDBCQUF5Qix5SUFEN0I7QUFFSSxzQkFDSTtBQUNJLHVCQUFtQixlQUR2QjtBQUVJLG9CQUFnQixTQUZwQjtBQUdJLHdCQUFvQixRQUh4QjtBQUdrQztBQUM5QixxQkFBaUIsY0FKckI7QUFLSSxvQkFBZ0IsWUFMcEI7QUFNSSxxQkFBaUI7QUFOckIsR0FIUjtBQVdJLHVCQUFxQix1SEFYekI7QUFZSSxzQkFBb0IsNkNBWnhCO0FBYUksc0JBQW9CLHlEQWJ4QjtBQWNJLHNCQUFvQiw2QkFkeEI7QUFlSSxzQkFBb0IsbUdBZnhCO0FBZ0JJLHNCQUFvQiw0Q0FoQnhCO0FBaUJJLHNCQUFvQiwyREFqQnhCO0FBa0JJLHdCQUFzQixxRkFsQjFCO0FBbUJJLHdCQUFzQjtBQW5CMUIsQ0FEYSxDQUFqQjs7QUF3QkEsU0FBU0MsT0FBVCxDQUFpQkMsR0FBakIsRUFBc0I7QUFDbEIsU0FBT0YsUUFBUSxDQUFDLENBQUQsQ0FBUixDQUFZRSxHQUFaLENBQVAsQ0FEa0IsQ0FDTTtBQUMzQjs7QUFBQSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZWcyZGF0YS9JZGVhUHJvamVjdHMvY2hhcnRfcGRmX2xhYmVsbWFrZV8yLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGRhdGFMaXN0ID0gWyAvLyByYWJiaXRNUeyXkOyEnCDqsIDsoLjsmKTripQg6rKD7J2EIOyWtOuWu+qyjCDtkZztmITtlaDsp4A/XG4gICAge1xuICAgICAgICBcIm1haW5wYWdlLWRlc2NyaXB0aW9uXCIgOiBcIlRFU1PsnZgg7KeB7J6lIOuniOydjCDqsbTqsJUg67O06rOg7ISc64qUIOyxl+u0h+ydhCDthrXtlZwg7J6Q6rCA67O06rOg7ZiV7IudIOyEpOusuOqzvCBIUlYg7Lih7KCV6rCS7J2EIOq4sOuwmOycvOuhnCDthrXqs4TsoIHsnbgg67aE7ISd7J2EIO2Gte2VtCDqsrDqs7zrpbwg7KCc6rO17ZWp64uI64ukLiBURVNTIOuztOqzoOyEnOyXkOyEnCDsoJzqs7XtlZjripQg6rKw6rO86rCS7J2AIOyngeustOuzhOuhnCDrjIDrtoTrpZgsIOykkeu2hOulmCwg7IaM67aE66WY66GcIOuCmOuIhOyWtCDthrXqs4Trpbwg7KCc6rO17ZWY64qUIO2YleyLneyeheuLiOuLpC5cIixcbiAgICAgICAgXCJtYWlucGFnZS1jb21wYW55XCI6XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgXCJkaXN0aW5jdC1udW1iZXJcIjogXCI5ODc2QkE1NDMyMURDXCIsXG4gICAgICAgICAgICAgICAgXCJjb21wYW55LW5hbWVcIjogXCLso7zsi53tmozsgqwg7ZWY7J20XCIsXG4gICAgICAgICAgICAgICAgXCJjb21wYW55LWNhdGFnb3J5XCI6IFwiKElDVOyXhSlcIiwgLy8gKCApIOyekOuPmeyDneyEsSBob3c/XG4gICAgICAgICAgICAgICAgXCJzb3J0LW9mLWNoZWNrXCI6IFwi7KeB66y0IOyKpO2KuOugiOyKpCDsmbggNuyihVwiLFxuICAgICAgICAgICAgICAgIFwicmVxdWVzdC1kYXRlXCI6IFwiMjAyMS0xMC0zMFwiLFxuICAgICAgICAgICAgICAgIFwicmVzcG9uc2UtZGF0ZVwiOiBcIjIwMjEtMTEtMzBcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgIFwibWFpbnBhZ2Utc29sdXRpb25cIjogXCLsp4HrrLTsiqTtirjroIjsiqQsIOyasOyauOqwkCwg7KCB7J2R7Iqk7Yq466CI7IqkIOydmOyLrC4gXFxuXFxu7Jqw7Jq46rCQLCDsoIHsnZHsiqTtirjroIjsiqTsl5Ag7JyE7ZeYIOyImOykgOydmCDsnITtl5jsnbQg64+E7Lac65CY7Ja0IOyjvOydmOqwgCDtlYTsmpTtlZwg7IOB7Zmp7J6ELiDsp4HrrLQg7Iqk7Yq466CI7Iqk7JmAIOyZuOyDgSDsiqTtirjroIjsiqTripQg7KSR6rCEIOyImOykgOydmCDsnITtl5jsnbQg64+E7Lac65CY7Ja0IOyngOyGjeyggeyduCDqtIDrpqzqsIAg7ZWE7JqU7ZWoLlwiLFxuICAgICAgICBcIm1haW5wYWdlLXJlc3VsdDFcIjogXCLsoITssrQg6rKw6rO87ZGc64qUIOuwqeyCrO2YlSDqt7jrnpjtlITroZwgNuqwgOyngCDsoJXsi6Dsp4jtmZjsl5Ag64yA7ZWcIOyghOyytCDqsrDqs7zrpbwg67O07Jes7KSN64uI64ukLlwiLFxuICAgICAgICBcIm1haW5wYWdlLXJlc3VsdDJcIjogXCI26rCA7KeAIOygleyLoOyniO2ZmOyXkCDrjIDtlZwg7Kad7IOB67OEIOyghOyytCDqsrDqs7zrpbwg67O07Jes7KSN64uI64ukLiDruYTqtZAg7IiY7LmY66W8IOyViOuCtO2VtCDsnITtl5gg7KCV64+E66W8IOyViOuCtO2VqeuLiOuLpC5cIixcbiAgICAgICAgXCJtYWlucGFnZS1yZXN1bHQzXCI6IFwi64Ko64WAIOyngeybkOydmCDsp4HrrLQg7Iqk7Yq466CI7Iqk66W8IOuCmO2DgOuCuCDrs7Tqs6DshJzsnoXri4jri6QuXCIsXG4gICAgICAgIFwibWFpbnBhZ2UtcmVzdWx0NFwiOiBcIuuCqOyEseydmCDqsr3smrAg7KeB66y0IOyKpO2KuOugiOyKpCDsmpTshowg7KSRIOyngeustCDsmpTqtazrj4TqsIAgODnsoJDsnLzroZwg7IOB7JyEIDI1JeyXkCDtlbTri7ntlanri4jri6QuIOyXrOyEseydmCDqsr3smrAg7KeB66y0IOyKpO2KuOugiOyKpCDsmpTshowg7KSRIOuztOyDgSDrtoDsoIHsoIjsnbQgNjfsoJDsnLzroZwg7IOB7JyEIDUwJeyXkCDtlbTri7ntlanri4jri6QuXCIsXG4gICAgICAgIFwibWFpbnBhZ2UtcmVzdWx0NVwiOiBcIuyngeustCDsiqTtirjroIjsiqTsnZgg6rK97JqwIOuCqOyEseqzvCDsl6zshLHsnZgg7KeB66y0IOyKpO2KuOugiOyKpCDsmpTsnbjsnbQg64uk66W06rKMIOuCmO2DgOuCqeuLiOuLpC5cIixcbiAgICAgICAgXCJtYWlucGFnZS1yZXN1bHQ2XCI6IFwi7J207JeQIOuUsOudvCDrgqjshLHqs7wg7Jes7ISx7Jy866GcIOq1rOu2hO2VmOyXrCDsoITssrQg6rKw6rO8LCDsmpTsnbjrs4Qg6rKw6rO8LCA16rCc64WEIOyngeustCDsiqTtirjroIjsiqQg7Y+J6reg7J2EIOuztOyXrOykjeuLiOuLpC5cIixcbiAgICAgICAgXCJsZXZlbDFwYWdlLXJlc3VsdDFcIjogXCLrs7gg7ZqM7IKs7J2YIOyngeustCDrjIDrtoTrpZjripQgNuqwgOyngOuhnCDsgqzsl4XqtIDrpqwsIOqyveyYgS/tmozqs4Qv7IKs66y0LCDrspXrpaAv6rK97LCwL+yGjOuwqS/qtZDrj4Qv6rWt67CpLCDrrLjtmZQv7JiI7IigL+uUlOyekOyduC/rsKnshqEsIOyYgeyXhe2MkOunpCwg7KCV67O07Ya17Iug7Jy866GcIOuCmOuJqeuLiOuLpC5cIixcbiAgICAgICAgXCJsZXZlbDFwYWdlLXJlc3VsdDJcIjogXCLsoJXrs7TthrXsi6Ag67aE7JW8IOyGjOyGjSDsp4Hsm5Drk6TsnZgg7KCE67CY7KCB7J24IOuniOydjCDqsbTqsJXsnbQg7JyE7ZeY7ZWp64uI64ukLiDqt7gg64uk7J2M7Jy866Gc64qUIOyYgeyXhe2MkOunpCDrtoTslbwg7IaM7IaNIOyngeybkOuTpOydtCDrp4jsnYwg6rG06rCV7J20IOyii+yngCDslYrsnYAg6rKD7Jy866GcIOuztOyeheuLiOuLpC5cIixcbiAgICB9XG5dXG5cbmZ1bmN0aW9uIGdldERhdGEoa2V5KSB7XG4gICAgcmV0dXJuIGRhdGFMaXN0WzBdW2tleV0gLy8gb2JqZWN0IOuCtOydmCBvYmplY3TsnZggdmFsdWXrpbwg672R7JWE64K064qUIOqyg+ydhCDqsITtjrjtnogg7ZWY6riwIOychO2VnCBjb2RlIO2VhOyalFxufTtcblxuZXhwb3J0IHsgZ2V0RGF0YSB9O1xuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "DB.js"
      ],
      "names": [
        "dataList",
        "getData",
        "key"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,QAAQ,GAAG,CAAE;AACf;AACI,0BAAyB,yIAD7B;AAEI,sBACI;AACI,uBAAmB,eADvB;AAEI,oBAAgB,SAFpB;AAGI,wBAAoB,QAHxB;AAGkC;AAC9B,qBAAiB,cAJrB;AAKI,oBAAgB,YALpB;AAMI,qBAAiB;AANrB,GAHR;AAWI,uBAAqB,uHAXzB;AAYI,sBAAoB,6CAZxB;AAaI,sBAAoB,yDAbxB;AAcI,sBAAoB,6BAdxB;AAeI,sBAAoB,mGAfxB;AAgBI,sBAAoB,4CAhBxB;AAiBI,sBAAoB,2DAjBxB;AAkBI,wBAAsB,qFAlB1B;AAmBI,wBAAsB;AAnB1B,CADa,CAAjB;;AAwBA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,SAAOF,QAAQ,CAAC,CAAD,CAAR,CAAYE,GAAZ,CAAP,CADkB,CACM;AAC3B;;AAAA",
      "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
      "sourcesContent": [
        "const dataList = [ // rabbitMQ에서 가져오는 것을 어떻게 표현할지?\n    {\n        \"mainpage-description\" : \"TESS의 직장 마음 건강 보고서는 챗봇을 통한 자가보고형식 설문과 HRV 측정값을 기반으로 통계적인 분석을 통해 결과를 제공합니다. TESS 보고서에서 제공하는 결과값은 직무별로 대분류, 중분류, 소분류로 나누어 통계를 제공하는 형식입니다.\",\n        \"mainpage-company\":\n            {\n                \"distinct-number\": \"9876BA54321DC\",\n                \"company-name\": \"주식회사 하이\",\n                \"company-catagory\": \"(ICT업)\", // ( ) 자동생성 how?\n                \"sort-of-check\": \"직무 스트레스 외 6종\",\n                \"request-date\": \"2021-10-30\",\n                \"response-date\": \"2021-11-30\",\n            },\n        \"mainpage-solution\": \"직무스트레스, 우울감, 적응스트레스 의심. \\n\\n우울감, 적응스트레스에 위험 수준의 위험이 도출되어 주의가 필요한 상황임. 직무 스트레스와 외상 스트레스는 중간 수준의 위험이 도출되어 지속적인 관리가 필요함.\",\n        \"mainpage-result1\": \"전체 결과표는 방사형 그래프로 6가지 정신질환에 대한 전체 결과를 보여줍니다.\",\n        \"mainpage-result2\": \"6가지 정신질환에 대한 증상별 전체 결과를 보여줍니다. 비교 수치를 안내해 위험 정도를 안내합니다.\",\n        \"mainpage-result3\": \"남녀 직원의 직무 스트레스를 나타낸 보고서입니다.\",\n        \"mainpage-result4\": \"남성의 경우 직무 스트레스 요소 중 직무 요구도가 89점으로 상위 25%에 해당합니다. 여성의 경우 직무 스트레스 요소 중 보상 부적절이 67점으로 상위 50%에 해당합니다.\",\n        \"mainpage-result5\": \"직무 스트레스의 경우 남성과 여성의 직무 스트레스 요인이 다르게 나타납니다.\",\n        \"mainpage-result6\": \"이에 따라 남성과 여성으로 구분하여 전체 결과, 요인별 결과, 5개년 직무 스트레스 평균을 보여줍니다.\",\n        \"level1page-result1\": \"본 회사의 직무 대분류는 6가지로 사업관리, 경영/회계/사무, 법률/경찰/소방/교도/국방, 문화/예술/디자인/방송, 영업판매, 정보통신으로 나뉩니다.\",\n        \"level1page-result2\": \"정보통신 분야 소속 직원들의 전반적인 마음 건강이 위험합니다. 그 다음으로는 영업판매 분야 소속 직원들이 마음 건강이 좋지 않은 것으로 보입니다.\",\n    }\n]\n\nfunction getData(key) {\n    return dataList[0][key] // object 내의 object의 value를 뽑아내는 것을 간편히 하기 위한 code 필요\n};\n\nexport { getData };\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1641261073715
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2\",\"filename\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/font.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2",
      "filename": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/font.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/font.js",
        "plugins": [
          "classStaticBlock",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/font.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
        "sourceFileName": "font.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.font = void 0;\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar NanumGothic = _fs[\"default\"].readFileSync(\"./NanumGothic-Regular.ttf\");\n\nvar font = {\n  NanumGothic: {\n    data: NanumGothic,\n    subset: false\n  }\n};\nexports.font = font;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvbnQuanMiXSwibmFtZXMiOlsiTmFudW1Hb3RoaWMiLCJmcyIsInJlYWRGaWxlU3luYyIsImZvbnQiLCJkYXRhIiwic3Vic2V0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFFQSxJQUFNQSxXQUFXLEdBQUdDLGVBQUdDLFlBQUgsQ0FBZ0IsMkJBQWhCLENBQXBCOztBQUNPLElBQU1DLElBQUksR0FBRztBQUNoQkgsRUFBQUEsV0FBVyxFQUFHO0FBQ1ZJLElBQUFBLElBQUksRUFBRUosV0FESTtBQUVWSyxJQUFBQSxNQUFNLEVBQUU7QUFGRTtBQURFLENBQWIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2VnMmRhdGEvSWRlYVByb2plY3RzL2NoYXJ0X3BkZl9sYWJlbG1ha2VfMi8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZnMgZnJvbSBcImZzXCI7XG5cbmNvbnN0IE5hbnVtR290aGljID0gZnMucmVhZEZpbGVTeW5jKFwiLi9OYW51bUdvdGhpYy1SZWd1bGFyLnR0ZlwiKVxuZXhwb3J0IGNvbnN0IGZvbnQgPSB7XG4gICAgTmFudW1Hb3RoaWMgOiB7XG4gICAgICAgIGRhdGE6IE5hbnVtR290aGljLFxuICAgICAgICBzdWJzZXQ6IGZhbHNlXG4gICAgfVxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "font.js"
      ],
      "names": [
        "NanumGothic",
        "fs",
        "readFileSync",
        "font",
        "data",
        "subset"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,WAAW,GAAGC,eAAGC,YAAH,CAAgB,2BAAhB,CAApB;;AACO,IAAMC,IAAI,GAAG;AAChBH,EAAAA,WAAW,EAAG;AACVI,IAAAA,IAAI,EAAEJ,WADI;AAEVK,IAAAA,MAAM,EAAE;AAFE;AADE,CAAb",
      "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
      "sourcesContent": [
        "import fs from \"fs\";\n\nconst NanumGothic = fs.readFileSync(\"./NanumGothic-Regular.ttf\")\nexport const font = {\n    NanumGothic : {\n        data: NanumGothic,\n        subset: false\n    }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1640165639513
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2\",\"filename\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2",
      "filename": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/test.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/test.js",
        "plugins": [
          "classStaticBlock",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
        "sourceFileName": "test.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chart = _interopRequireDefault(require(\"chart.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nconsole.log(_chart[\"default\"].defaults);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuanMiXSwibmFtZXMiOlsiY29uc29sZSIsImxvZyIsIkNoYXJ0SlMiLCJkZWZhdWx0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUVBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsa0JBQVFDLFFBQXBCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9lZzJkYXRhL0lkZWFQcm9qZWN0cy9jaGFydF9wZGZfbGFiZWxtYWtlXzIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENoYXJ0SlMgZnJvbSAnY2hhcnQuanMnO1xuXG5jb25zb2xlLmxvZyhDaGFydEpTLmRlZmF1bHRzKVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "test.js"
      ],
      "names": [
        "console",
        "log",
        "ChartJS",
        "defaults"
      ],
      "mappings": ";;AAAA;;;;AAEAA,OAAO,CAACC,GAAR,CAAYC,kBAAQC,QAApB",
      "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
      "sourcesContent": [
        "import ChartJS from 'chart.js';\n\nconsole.log(ChartJS.defaults)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1640067797313
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2\",\"filename\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/publisher.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2",
      "filename": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/publisher.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/publisher.js",
        "plugins": [
          "classStaticBlock",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/publisher.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
        "sourceFileName": "publisher.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _callback_api = _interopRequireDefault(require(\"amqplib/callback_api\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// var amqp = require('amqplib/callback_api');\n_callback_api[\"default\"].connect('amqp://localhost', function (err, connection) {\n  if (err) {\n    throw err;\n  }\n\n  connection.createChannel(function (err, channel) {\n    if (err) {\n      throw err;\n    }\n\n    var queueName = \"technical\";\n    var message = \"this is technical thing\";\n    channel.assertQueue(queueName, {\n      durable: false\n    });\n    channel.sendToQueue(queueName, Buffer.from(message));\n    console.log(\"Message: \".concat(message));\n    setTimeout(function () {\n      connection.close();\n    }, 1000);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInB1Ymxpc2hlci5qcyJdLCJuYW1lcyI6WyJhbXFwIiwiY29ubmVjdCIsImVyciIsImNvbm5lY3Rpb24iLCJjcmVhdGVDaGFubmVsIiwiY2hhbm5lbCIsInF1ZXVlTmFtZSIsIm1lc3NhZ2UiLCJhc3NlcnRRdWV1ZSIsImR1cmFibGUiLCJzZW5kVG9RdWV1ZSIsIkJ1ZmZlciIsImZyb20iLCJjb25zb2xlIiwibG9nIiwic2V0VGltZW91dCIsImNsb3NlIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBQ0E7QUFFQUEseUJBQUtDLE9BQUwsQ0FBYSxrQkFBYixFQUFpQyxVQUFDQyxHQUFELEVBQU1DLFVBQU4sRUFBcUI7QUFDbEQsTUFBR0QsR0FBSCxFQUFRO0FBQ0osVUFBTUEsR0FBTjtBQUNIOztBQUNEQyxFQUFBQSxVQUFVLENBQUNDLGFBQVgsQ0FBeUIsVUFBQ0YsR0FBRCxFQUFNRyxPQUFOLEVBQWtCO0FBQ3ZDLFFBQUdILEdBQUgsRUFBUTtBQUNKLFlBQU1BLEdBQU47QUFDSDs7QUFDRCxRQUFJSSxTQUFTLEdBQUcsV0FBaEI7QUFDQSxRQUFJQyxPQUFPLEdBQUcseUJBQWQ7QUFFQUYsSUFBQUEsT0FBTyxDQUFDRyxXQUFSLENBQW9CRixTQUFwQixFQUErQjtBQUMzQkcsTUFBQUEsT0FBTyxFQUFFO0FBRGtCLEtBQS9CO0FBR0FKLElBQUFBLE9BQU8sQ0FBQ0ssV0FBUixDQUFvQkosU0FBcEIsRUFBK0JLLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZTCxPQUFaLENBQS9CO0FBQ0FNLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixvQkFBd0JQLE9BQXhCO0FBQ0FRLElBQUFBLFVBQVUsQ0FBQyxZQUFNO0FBQ2JaLE1BQUFBLFVBQVUsQ0FBQ2EsS0FBWDtBQUNILEtBRlMsRUFFUCxJQUZPLENBQVY7QUFHSCxHQWZEO0FBZ0JILENBcEJEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9lZzJkYXRhL0lkZWFQcm9qZWN0cy9jaGFydF9wZGZfbGFiZWxtYWtlXzIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFtcXAgZnJvbSAnYW1xcGxpYi9jYWxsYmFja19hcGknO1xuLy8gdmFyIGFtcXAgPSByZXF1aXJlKCdhbXFwbGliL2NhbGxiYWNrX2FwaScpO1xuXG5hbXFwLmNvbm5lY3QoJ2FtcXA6Ly9sb2NhbGhvc3QnLCAoZXJyLCBjb25uZWN0aW9uKSA9PiB7XG4gICAgaWYoZXJyKSB7XG4gICAgICAgIHRocm93IGVycjtcbiAgICB9XG4gICAgY29ubmVjdGlvbi5jcmVhdGVDaGFubmVsKChlcnIsIGNoYW5uZWwpID0+IHtcbiAgICAgICAgaWYoZXJyKSB7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHF1ZXVlTmFtZSA9IFwidGVjaG5pY2FsXCI7XG4gICAgICAgIGxldCBtZXNzYWdlID0gXCJ0aGlzIGlzIHRlY2huaWNhbCB0aGluZ1wiO1xuXG4gICAgICAgIGNoYW5uZWwuYXNzZXJ0UXVldWUocXVldWVOYW1lLCB7XG4gICAgICAgICAgICBkdXJhYmxlOiBmYWxzZVxuICAgICAgICB9KTtcbiAgICAgICAgY2hhbm5lbC5zZW5kVG9RdWV1ZShxdWV1ZU5hbWUsIEJ1ZmZlci5mcm9tKG1lc3NhZ2UpKTtcbiAgICAgICAgY29uc29sZS5sb2coYE1lc3NhZ2U6ICR7bWVzc2FnZX1gKVxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIGNvbm5lY3Rpb24uY2xvc2UoKTtcbiAgICAgICAgfSwgMTAwMClcbiAgICB9KVxufSlcblxuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "publisher.js"
      ],
      "names": [
        "amqp",
        "connect",
        "err",
        "connection",
        "createChannel",
        "channel",
        "queueName",
        "message",
        "assertQueue",
        "durable",
        "sendToQueue",
        "Buffer",
        "from",
        "console",
        "log",
        "setTimeout",
        "close"
      ],
      "mappings": ";;AAAA;;;;AACA;AAEAA,yBAAKC,OAAL,CAAa,kBAAb,EAAiC,UAACC,GAAD,EAAMC,UAAN,EAAqB;AAClD,MAAGD,GAAH,EAAQ;AACJ,UAAMA,GAAN;AACH;;AACDC,EAAAA,UAAU,CAACC,aAAX,CAAyB,UAACF,GAAD,EAAMG,OAAN,EAAkB;AACvC,QAAGH,GAAH,EAAQ;AACJ,YAAMA,GAAN;AACH;;AACD,QAAII,SAAS,GAAG,WAAhB;AACA,QAAIC,OAAO,GAAG,yBAAd;AAEAF,IAAAA,OAAO,CAACG,WAAR,CAAoBF,SAApB,EAA+B;AAC3BG,MAAAA,OAAO,EAAE;AADkB,KAA/B;AAGAJ,IAAAA,OAAO,CAACK,WAAR,CAAoBJ,SAApB,EAA+BK,MAAM,CAACC,IAAP,CAAYL,OAAZ,CAA/B;AACAM,IAAAA,OAAO,CAACC,GAAR,oBAAwBP,OAAxB;AACAQ,IAAAA,UAAU,CAAC,YAAM;AACbZ,MAAAA,UAAU,CAACa,KAAX;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAfD;AAgBH,CApBD",
      "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
      "sourcesContent": [
        "import amqp from 'amqplib/callback_api';\n// var amqp = require('amqplib/callback_api');\n\namqp.connect('amqp://localhost', (err, connection) => {\n    if(err) {\n        throw err;\n    }\n    connection.createChannel((err, channel) => {\n        if(err) {\n            throw err;\n        }\n        let queueName = \"technical\";\n        let message = \"this is technical thing\";\n\n        channel.assertQueue(queueName, {\n            durable: false\n        });\n        channel.sendToQueue(queueName, Buffer.from(message));\n        console.log(`Message: ${message}`)\n        setTimeout(() => {\n            connection.close();\n        }, 1000)\n    })\n})\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1641286026968
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2\",\"filename\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/subscriber.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2",
      "filename": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/subscriber.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/subscriber.js",
        "plugins": [
          "classStaticBlock",
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/subscriber.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
        "sourceFileName": "subscriber.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _callback_api = _interopRequireDefault(require(\"amqplib/callback_api\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// var amqp = require('amqplib/callback_api');\n_callback_api[\"default\"].connect('amqp://localhost', function (err, connection) {\n  if (err) {\n    throw err;\n  }\n\n  connection.createChannel(function (err, channel) {\n    if (err) {\n      throw err;\n    }\n\n    var queueName = \"technical\";\n    channel.assertQueue(queueName, {\n      durable: false\n    });\n    channel.consume(queueName, function (message) {\n      console.log(\"Received: \".concat(message.content.toString()));\n      channel.ack(message);\n    } // {\n    //     noAck: true\n    // }\n    );\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN1YnNjcmliZXIuanMiXSwibmFtZXMiOlsiYW1xcCIsImNvbm5lY3QiLCJlcnIiLCJjb25uZWN0aW9uIiwiY3JlYXRlQ2hhbm5lbCIsImNoYW5uZWwiLCJxdWV1ZU5hbWUiLCJhc3NlcnRRdWV1ZSIsImR1cmFibGUiLCJjb25zdW1lIiwibWVzc2FnZSIsImNvbnNvbGUiLCJsb2ciLCJjb250ZW50IiwidG9TdHJpbmciLCJhY2siXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFDQTtBQUVBQSx5QkFBS0MsT0FBTCxDQUFhLGtCQUFiLEVBQWlDLFVBQUNDLEdBQUQsRUFBTUMsVUFBTixFQUFxQjtBQUNsRCxNQUFHRCxHQUFILEVBQVE7QUFDSixVQUFNQSxHQUFOO0FBQ0g7O0FBQ0RDLEVBQUFBLFVBQVUsQ0FBQ0MsYUFBWCxDQUF5QixVQUFDRixHQUFELEVBQU1HLE9BQU4sRUFBa0I7QUFDdkMsUUFBR0gsR0FBSCxFQUFRO0FBQ0osWUFBTUEsR0FBTjtBQUNIOztBQUNELFFBQUlJLFNBQVMsR0FBRyxXQUFoQjtBQUVBRCxJQUFBQSxPQUFPLENBQUNFLFdBQVIsQ0FBb0JELFNBQXBCLEVBQStCO0FBQzNCRSxNQUFBQSxPQUFPLEVBQUU7QUFEa0IsS0FBL0I7QUFHQUgsSUFBQUEsT0FBTyxDQUFDSSxPQUFSLENBQWdCSCxTQUFoQixFQUEyQixVQUFDSSxPQUFELEVBQWE7QUFDcENDLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixxQkFBeUJGLE9BQU8sQ0FBQ0csT0FBUixDQUFnQkMsUUFBaEIsRUFBekI7QUFDQVQsTUFBQUEsT0FBTyxDQUFDVSxHQUFSLENBQVlMLE9BQVo7QUFDSCxLQUhELENBSUE7QUFDQTtBQUNBO0FBTkE7QUFRSCxHQWpCRDtBQWtCSCxDQXRCRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZWcyZGF0YS9JZGVhUHJvamVjdHMvY2hhcnRfcGRmX2xhYmVsbWFrZV8yLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhbXFwIGZyb20gJ2FtcXBsaWIvY2FsbGJhY2tfYXBpJztcbi8vIHZhciBhbXFwID0gcmVxdWlyZSgnYW1xcGxpYi9jYWxsYmFja19hcGknKTtcblxuYW1xcC5jb25uZWN0KCdhbXFwOi8vbG9jYWxob3N0JywgKGVyciwgY29ubmVjdGlvbikgPT4ge1xuICAgIGlmKGVycikge1xuICAgICAgICB0aHJvdyBlcnI7XG4gICAgfVxuICAgIGNvbm5lY3Rpb24uY3JlYXRlQ2hhbm5lbCgoZXJyLCBjaGFubmVsKSA9PiB7XG4gICAgICAgIGlmKGVycikge1xuICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICB9XG4gICAgICAgIGxldCBxdWV1ZU5hbWUgPSBcInRlY2huaWNhbFwiO1xuXG4gICAgICAgIGNoYW5uZWwuYXNzZXJ0UXVldWUocXVldWVOYW1lLCB7XG4gICAgICAgICAgICBkdXJhYmxlOiBmYWxzZVxuICAgICAgICB9KTtcbiAgICAgICAgY2hhbm5lbC5jb25zdW1lKHF1ZXVlTmFtZSwgKG1lc3NhZ2UpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBSZWNlaXZlZDogJHttZXNzYWdlLmNvbnRlbnQudG9TdHJpbmcoKX1gKVxuICAgICAgICAgICAgY2hhbm5lbC5hY2sobWVzc2FnZSlcbiAgICAgICAgfSxcbiAgICAgICAgLy8ge1xuICAgICAgICAvLyAgICAgbm9BY2s6IHRydWVcbiAgICAgICAgLy8gfVxuICAgICAgICApXG4gICAgfSlcbn0pXG5cblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "subscriber.js"
      ],
      "names": [
        "amqp",
        "connect",
        "err",
        "connection",
        "createChannel",
        "channel",
        "queueName",
        "assertQueue",
        "durable",
        "consume",
        "message",
        "console",
        "log",
        "content",
        "toString",
        "ack"
      ],
      "mappings": ";;AAAA;;;;AACA;AAEAA,yBAAKC,OAAL,CAAa,kBAAb,EAAiC,UAACC,GAAD,EAAMC,UAAN,EAAqB;AAClD,MAAGD,GAAH,EAAQ;AACJ,UAAMA,GAAN;AACH;;AACDC,EAAAA,UAAU,CAACC,aAAX,CAAyB,UAACF,GAAD,EAAMG,OAAN,EAAkB;AACvC,QAAGH,GAAH,EAAQ;AACJ,YAAMA,GAAN;AACH;;AACD,QAAII,SAAS,GAAG,WAAhB;AAEAD,IAAAA,OAAO,CAACE,WAAR,CAAoBD,SAApB,EAA+B;AAC3BE,MAAAA,OAAO,EAAE;AADkB,KAA/B;AAGAH,IAAAA,OAAO,CAACI,OAAR,CAAgBH,SAAhB,EAA2B,UAACI,OAAD,EAAa;AACpCC,MAAAA,OAAO,CAACC,GAAR,qBAAyBF,OAAO,CAACG,OAAR,CAAgBC,QAAhB,EAAzB;AACAT,MAAAA,OAAO,CAACU,GAAR,CAAYL,OAAZ;AACH,KAHD,CAIA;AACA;AACA;AANA;AAQH,GAjBD;AAkBH,CAtBD",
      "sourceRoot": "/Users/eg2data/IdeaProjects/chart_pdf_labelmake_2/",
      "sourcesContent": [
        "import amqp from 'amqplib/callback_api';\n// var amqp = require('amqplib/callback_api');\n\namqp.connect('amqp://localhost', (err, connection) => {\n    if(err) {\n        throw err;\n    }\n    connection.createChannel((err, channel) => {\n        if(err) {\n            throw err;\n        }\n        let queueName = \"technical\";\n\n        channel.assertQueue(queueName, {\n            durable: false\n        });\n        channel.consume(queueName, (message) => {\n            console.log(`Received: ${message.content.toString()}`)\n            channel.ack(message)\n        },\n        // {\n        //     noAck: true\n        // }\n        )\n    })\n})\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1641286409457
  }
}